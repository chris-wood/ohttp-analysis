theory OHTTP begin

// Function signature and definition of the equational theory E

builtins: diffie-hellman
functions: Expand/3, Extract/2, fst/1, h/1, hmac/1, open/4, pair/2,
           pk/1, sdec/2, seal/4, senc/2, sign/2, snd/1, true/0, verify/3
equations:
    fst(<x.1, x.2>) = x.1,
    open(k, n, a, seal(k, n, a, p)) = p,
    sdec(senc(x.1, x.2), x.2) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(sign(x.1, x.2), x.1, pk(x.2)) = true



restriction Eq_check_succeed:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

restriction Neq_check_succeed:
  "∀ x y #i. (Neq( x, y ) @ #i) ⇒ (¬(x = y))"
  // safety formula

restriction VerifyPSKInputs_succeed:
  "∀ mode psk psk_id #i.
    (VerifyPSKInputs( mode, psk, psk_id ) @ #i) ⇒
    ((((psk = 'blank') ∧ (psk_id = 'blank')) ∧ (mode = '0x00')) ∨
     (((¬(psk = 'blank')) ∧ (¬(psk_id = 'blank'))) ∧ (mode = '0x01')))"
  // safety formula

rule (modulo E) Starter:
   [ Fr( ~kxy ) ]
  --[ Channel( $X, $Y ) ]->
   [
   KeyExC( $X, $Y, ~kxy ), KeyExS( $X, $Y, ~kxy ),
   KeyExI( $X, $Y, ~kxy )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Generate_DH_key_pair:
   [ Fr( ~x ), Fr( ~key_id ) ]
  -->
   [
   !Pk( $A, <~key_id, $kem_id, $kdf_id, $aead_id>, 'g'^~x ),
   Out( <~key_id, 'g'^~x> ),
   !Ltk( $A, <~key_id, $kem_id, $kdf_id, $aead_id>, ~x )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) C_QueryGeneration:
   [
   KeyExC( $C, $P, ~k ),
   !Pk( $T, <~key_id, kem_id, kdf_id, aead_id>, gy ), Fr( ~x ),
   Fr( ~req ), Fr( ~cid )
   ]
  --[
  Neq( $P, $T ),
  MsgSource( senc(<~cid, <~key_id, kem_id, kdf_id, aead_id>, 'g'^~x, 
                   seal(Expand(Extract(Expand(Extract('blank',
                                                      <'HPKE_v1', 'eae_prk', gy^~x>),
                                              <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                                       <'HPKE_v1', 'secret', 'blank'>),
                               <'32', 'HPKE_v1', 'key', '0x00', 
                                Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                Extract('blank',
                                        <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                         ~key_id, kem_id, kdf_id, aead_id>)
                               >,
                               '32'),
                        Expand(Extract(Expand(Extract('blank',
                                                      <'HPKE_v1', 'eae_prk', gy^~x>),
                                              <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                                       <'HPKE_v1', 'secret', 'blank'>),
                               <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                                Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                Extract('blank',
                                        <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                         ~key_id, kem_id, kdf_id, aead_id>)
                               >,
                               '32'),
                        <'message_ohttp_req', '0x00', ~key_id, kem_id, kdf_id, aead_id>,
                        ~req)
                  >,
                  ~k),
             ~k,
             <<~key_id, kem_id, kdf_id, aead_id>, 'g'^~x, 
              seal(Expand(Extract(Expand(Extract('blank',
                                                 <'HPKE_v1', 'eae_prk', gy^~x>),
                                         <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                                  <'HPKE_v1', 'secret', 'blank'>),
                          <'32', 'HPKE_v1', 'key', '0x00', 
                           Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                           Extract('blank',
                                   <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                    kem_id, kdf_id, aead_id>)
                          >,
                          '32'),
                   Expand(Extract(Expand(Extract('blank',
                                                 <'HPKE_v1', 'eae_prk', gy^~x>),
                                         <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                                  <'HPKE_v1', 'secret', 'blank'>),
                          <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                           Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                           Extract('blank',
                                   <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                    kem_id, kdf_id, aead_id>)
                          >,
                          '32'),
                   <'message_ohttp_req', '0x00', ~key_id, kem_id, kdf_id, aead_id>,
                   ~req)
             >
  ),
  SealSources( seal(Expand(Extract(Expand(Extract('blank',
                                                  <'HPKE_v1', 'eae_prk', gy^~x>),
                                          <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                                   <'HPKE_v1', 'secret', 'blank'>),
                           <'32', 'HPKE_v1', 'key', '0x00', 
                            Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                            Extract('blank',
                                    <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                     kem_id, kdf_id, aead_id>)
                           >,
                           '32'),
                    Expand(Extract(Expand(Extract('blank',
                                                  <'HPKE_v1', 'eae_prk', gy^~x>),
                                          <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                                   <'HPKE_v1', 'secret', 'blank'>),
                           <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                            Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                            Extract('blank',
                                    <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                     kem_id, kdf_id, aead_id>)
                           >,
                           '32'),
                    <'message_ohttp_req', '0x00', ~key_id, kem_id, kdf_id, aead_id>,
                    ~req)
  ),
  C_SS( 'g'^~x, gy,
        Expand(Extract('blank', <'HPKE_v1', 'eae_prk', gy^~x>),
               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32')
  ),
  C_QG( $C, 'g'^~x, $P, ~k, $T, gy, ~cid, ~req ),
  VerifyPSKInputs( '0x00', 'blank', 'blank' )
  ]->
   [
   Out( senc(<~cid, <~key_id, kem_id, kdf_id, aead_id>, 'g'^~x, 
              seal(Expand(Extract(Expand(Extract('blank',
                                                 <'HPKE_v1', 'eae_prk', gy^~x>),
                                         <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                                  <'HPKE_v1', 'secret', 'blank'>),
                          <'32', 'HPKE_v1', 'key', '0x00', 
                           Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                           Extract('blank',
                                   <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                    kem_id, kdf_id, aead_id>)
                          >,
                          '32'),
                   Expand(Extract(Expand(Extract('blank',
                                                 <'HPKE_v1', 'eae_prk', gy^~x>),
                                         <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                                  <'HPKE_v1', 'secret', 'blank'>),
                          <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                           Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                           Extract('blank',
                                   <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                    kem_id, kdf_id, aead_id>)
                          >,
                          '32'),
                   <'message_ohttp_req', '0x00', ~key_id, kem_id, kdf_id, aead_id>,
                   ~req)
             >,
             ~k)
   ),
   C_ResponseHandler( ~req, $C, 'g'^~x, $P, ~k, $T, gy,
                      Expand(Extract('blank', <'HPKE_v1', 'eae_prk', gy^~x>),
                             <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                      <'message_ohttp_req', '0x00', ~key_id, kem_id, kdf_id, aead_id>
   )
   ]

  /*
  rule (modulo AC) C_QueryGeneration:
     [
     KeyExC( $C, $P, ~k ),
     !Pk( $T, <~key_id, kem_id, kdf_id, aead_id>, gy ), Fr( ~x ),
     Fr( ~req ), Fr( ~cid )
     ]
    --[
    Neq( $P, $T ),
    MsgSource( senc(<~cid, <~key_id, kem_id, kdf_id, aead_id>, 'g'^~x, 
                     seal(Expand(Extract(Expand(Extract('blank',
                                                        <'HPKE_v1', 'eae_prk', z>),
                                                <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>,
                                                '32'),
                                         <'HPKE_v1', 'secret', 'blank'>),
                                 <'32', 'HPKE_v1', 'key', '0x00', 
                                  Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                  Extract('blank',
                                          <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                           ~key_id, kem_id, kdf_id, aead_id>)
                                 >,
                                 '32'),
                          Expand(Extract(Expand(Extract('blank', <'HPKE_v1', 'eae_prk', z>),
                                                <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>,
                                                '32'),
                                         <'HPKE_v1', 'secret', 'blank'>),
                                 <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                                  Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                  Extract('blank',
                                          <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                           ~key_id, kem_id, kdf_id, aead_id>)
                                 >,
                                 '32'),
                          <'message_ohttp_req', '0x00', ~key_id, kem_id, kdf_id, aead_id>,
                          ~req)
                    >,
                    ~k),
               ~k,
               <<~key_id, kem_id, kdf_id, aead_id>, 'g'^~x, 
                seal(Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', z>),
                                           <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'key', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                      kem_id, kdf_id, aead_id>)
                            >,
                            '32'),
                     Expand(Extract(Expand(Extract('blank', <'HPKE_v1', 'eae_prk', z>),
                                           <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                      kem_id, kdf_id, aead_id>)
                            >,
                            '32'),
                     <'message_ohttp_req', '0x00', ~key_id, kem_id, kdf_id, aead_id>,
                     ~req)
               >
    ),
    SealSources( seal(Expand(Extract(Expand(Extract('blank',
                                                    <'HPKE_v1', 'eae_prk', z>),
                                            <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                                     <'HPKE_v1', 'secret', 'blank'>),
                             <'32', 'HPKE_v1', 'key', '0x00', 
                              Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                              Extract('blank',
                                      <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                       ~key_id, kem_id, kdf_id, aead_id>)
                             >,
                             '32'),
                      Expand(Extract(Expand(Extract('blank', <'HPKE_v1', 'eae_prk', z>),
                                            <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                                     <'HPKE_v1', 'secret', 'blank'>),
                             <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                              Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                              Extract('blank',
                                      <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                       ~key_id, kem_id, kdf_id, aead_id>)
                             >,
                             '32'),
                      <'message_ohttp_req', '0x00', ~key_id, kem_id, kdf_id, aead_id>,
                      ~req)
    ),
    C_SS( 'g'^~x, gy,
          Expand(Extract('blank', <'HPKE_v1', 'eae_prk', z>),
                 <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32')
    ),
    C_QG( $C, 'g'^~x, $P, ~k, $T, gy, ~cid, ~req ),
    VerifyPSKInputs( '0x00', 'blank', 'blank' )
    ]->
     [
     Out( senc(<~cid, <~key_id, kem_id, kdf_id, aead_id>, 'g'^~x, 
                seal(Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', z>),
                                           <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'key', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                      kem_id, kdf_id, aead_id>)
                            >,
                            '32'),
                     Expand(Extract(Expand(Extract('blank', <'HPKE_v1', 'eae_prk', z>),
                                           <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                      kem_id, kdf_id, aead_id>)
                            >,
                            '32'),
                     <'message_ohttp_req', '0x00', ~key_id, kem_id, kdf_id, aead_id>,
                     ~req)
               >,
               ~k)
     ),
     C_ResponseHandler( ~req, $C, 'g'^~x, $P, ~k, $T, gy,
                        Expand(Extract('blank', <'HPKE_v1', 'eae_prk', z>),
                               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, gy>, '32'),
                        <'message_ohttp_req', '0x00', ~key_id, kem_id, kdf_id, aead_id>
     )
     ]
    variants (modulo AC)
    1. ~x    = ~x.21
       gy    = gy.23
       z     = gy.23^~x.21
    
    2. ~x    = ~x.28
       gy    = z.37^inv(~x.28)
       z     = z.37
    
    3. ~x    = ~x.326
       gy    = x.642^x.643
       z     = x.642^(~x.326*x.643)
    
    4. ~x    = ~x.328
       gy    = x.646^inv((~x.328*x.647))
       z     = x.646^inv(x.647)
    
    5. ~x    = ~x.328
       gy    = x.646^(x.647*inv(~x.328))
       z     = x.646^x.647
    
    6. ~x    = ~x.329
       gy    = x.647^(x.648*inv((~x.329*x.649)))
       z     = x.647^(x.648*inv(x.649))
  */

rule (modulo E) P_HandleQuery:
   [
   KeyExS( $C, $P, ~k ),
   In( senc(<cid, <key_id, kem_id, kdf_id, aead_id>, gx, opaque>, ~k)
   ),
   !Pk( $T, <key_id, kem_id, kdf_id, aead_id>, gy ), Fr( ~ptid )
   ]
  --[
  PHQ( senc(<cid, <key_id, kem_id, kdf_id, aead_id>, gx, opaque>,
            ~k),
       gx, <<key_id, kem_id, kdf_id, aead_id>, gx, opaque>
  )
  ]->
   [
   Out( <$T, <key_id, kem_id, kdf_id, aead_id>, gx, opaque> ),
   P_ResponseHandler( ~ptid, $C, $P, ~k )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) T_HandleQuery:
   [
   In( <$T, <~key_id, kem_id, kdf_id, aead_id>, gx, 
        seal(ckey, cnonce, aad, request)>
   ),
   !Ltk( $T, <~key_id, kem_id, kdf_id, aead_id>, ~y ), Fr( ~ttid ),
   Fr( ~resp ), Fr( ~resp_nonce )
   ]
  --[
  Eq( open(Expand(Extract(Expand(Extract('blank',
                                         <'HPKE_v1', 'eae_prk', gx^~y>),
                                 <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>, '32'),
                          <'HPKE_v1', 'secret', 'blank'>),
                  <'32', 'HPKE_v1', 'key', '0x00', 
                   Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                   Extract('blank',
                           <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                            kem_id, kdf_id, aead_id>)
                  >,
                  '32'),
           Expand(Extract(Expand(Extract('blank',
                                         <'HPKE_v1', 'eae_prk', gx^~y>),
                                 <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>, '32'),
                          <'HPKE_v1', 'secret', 'blank'>),
                  <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                   Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                   Extract('blank',
                           <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                            kem_id, kdf_id, aead_id>)
                  >,
                  '32'),
           <'message_ohttp_req', '0x00', ~key_id, kem_id, kdf_id, aead_id>,
           seal(ckey, cnonce, aad, request)),
      request
  ),
  T_Done( ~ttid ),
  T_SS( gx, 'g'^~y,
        Expand(Extract('blank', <'HPKE_v1', 'eae_prk', gx^~y>),
               <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>, '32')
  ),
  T_Answer( ~ttid, $T, gx, 'g'^~y, request, ~resp ),
  VerifyPSKInputs( '0x00', 'blank', 'blank' ),
  SealSources( seal(Expand(Extract(<gx, ~resp_nonce>,
                                   Expand(Expand(Extract(Expand(Extract('blank',
                                                                        <'HPKE_v1', 'eae_prk', gx^~y
                                                                        >),
                                                                <'32', 'HPKE_v1', 'shared_secret', 
                                                                 gx, 'g'^~y>,
                                                                '32'),
                                                         <'HPKE_v1', 'secret', 'blank'>),
                                                 <'32', 'HPKE_v1', 'exp', '0x00', 
                                                  Extract('blank',
                                                          <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                  Extract('blank',
                                                          <'HPKE_v1', 'info_hash', 
                                                           'message_ohttp_req', '0x00', ~key_id, 
                                                           kem_id, kdf_id, aead_id>)
                                                 >,
                                                 '32'),
                                          <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                           'key', '32'),
                    Expand(Extract(<gx, ~resp_nonce>,
                                   Expand(Expand(Extract(Expand(Extract('blank',
                                                                        <'HPKE_v1', 'eae_prk', gx^~y
                                                                        >),
                                                                <'32', 'HPKE_v1', 'shared_secret', 
                                                                 gx, 'g'^~y>,
                                                                '32'),
                                                         <'HPKE_v1', 'secret', 'blank'>),
                                                 <'32', 'HPKE_v1', 'exp', '0x00', 
                                                  Extract('blank',
                                                          <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                  Extract('blank',
                                                          <'HPKE_v1', 'info_hash', 
                                                           'message_ohttp_req', '0x00', ~key_id, 
                                                           kem_id, kdf_id, aead_id>)
                                                 >,
                                                 '32'),
                                          <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                           'nonce', '32'),
                    'blank', ~resp)
  )
  ]->
   [
   Out( <~resp_nonce, 
         seal(Expand(Extract(<gx, ~resp_nonce>,
                             Expand(Expand(Extract(Expand(Extract('blank',
                                                                  <'HPKE_v1', 'eae_prk', gx^~y>),
                                                          <'32', 'HPKE_v1', 'shared_secret', gx, 
                                                           'g'^~y>,
                                                          '32'),
                                                   <'HPKE_v1', 'secret', 'blank'>),
                                           <'32', 'HPKE_v1', 'exp', '0x00', 
                                            Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                            Extract('blank',
                                                    <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                     '0x00', ~key_id, kem_id, kdf_id, aead_id>)
                                           >,
                                           '32'),
                                    <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                     'key', '32'),
              Expand(Extract(<gx, ~resp_nonce>,
                             Expand(Expand(Extract(Expand(Extract('blank',
                                                                  <'HPKE_v1', 'eae_prk', gx^~y>),
                                                          <'32', 'HPKE_v1', 'shared_secret', gx, 
                                                           'g'^~y>,
                                                          '32'),
                                                   <'HPKE_v1', 'secret', 'blank'>),
                                           <'32', 'HPKE_v1', 'exp', '0x00', 
                                            Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                            Extract('blank',
                                                    <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                     '0x00', ~key_id, kem_id, kdf_id, aead_id>)
                                           >,
                                           '32'),
                                    <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                     'nonce', '32'),
              'blank', ~resp)
        >
   )
   ]

  /*
  rule (modulo AC) T_HandleQuery:
     [
     In( <$T, <~key_id, kem_id, kdf_id, aead_id>, gx, 
          seal(ckey, cnonce, aad, request)>
     ),
     !Ltk( $T, <~key_id, kem_id, kdf_id, aead_id>, ~y ), Fr( ~ttid ),
     Fr( ~resp ), Fr( ~resp_nonce )
     ]
    --[
    Eq( z.1, request ), T_Done( ~ttid ),
    T_SS( gx, 'g'^~y,
          Expand(Extract('blank', <'HPKE_v1', 'eae_prk', z>),
                 <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>, '32')
    ),
    T_Answer( ~ttid, $T, gx, 'g'^~y, request, ~resp ),
    VerifyPSKInputs( '0x00', 'blank', 'blank' ),
    SealSources( seal(Expand(Extract(<gx, ~resp_nonce>,
                                     Expand(Expand(Extract(Expand(Extract('blank',
                                                                          <'HPKE_v1', 'eae_prk', z
                                                                          >),
                                                                  <'32', 'HPKE_v1', 
                                                                   'shared_secret', gx, 'g'^~y>,
                                                                  '32'),
                                                           <'HPKE_v1', 'secret', 'blank'>),
                                                   <'32', 'HPKE_v1', 'exp', '0x00', 
                                                    Extract('blank',
                                                            <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                    Extract('blank',
                                                            <'HPKE_v1', 'info_hash', 
                                                             'message_ohttp_req', '0x00', ~key_id, 
                                                             kem_id, kdf_id, aead_id>)
                                                   >,
                                                   '32'),
                                            <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                             'key', '32'),
                      Expand(Extract(<gx, ~resp_nonce>,
                                     Expand(Expand(Extract(Expand(Extract('blank',
                                                                          <'HPKE_v1', 'eae_prk', z
                                                                          >),
                                                                  <'32', 'HPKE_v1', 
                                                                   'shared_secret', gx, 'g'^~y>,
                                                                  '32'),
                                                           <'HPKE_v1', 'secret', 'blank'>),
                                                   <'32', 'HPKE_v1', 'exp', '0x00', 
                                                    Extract('blank',
                                                            <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                    Extract('blank',
                                                            <'HPKE_v1', 'info_hash', 
                                                             'message_ohttp_req', '0x00', ~key_id, 
                                                             kem_id, kdf_id, aead_id>)
                                                   >,
                                                   '32'),
                                            <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                             'nonce', '32'),
                      'blank', ~resp)
    )
    ]->
     [
     Out( <~resp_nonce, 
           seal(Expand(Extract(<gx, ~resp_nonce>,
                               Expand(Expand(Extract(Expand(Extract('blank',
                                                                    <'HPKE_v1', 'eae_prk', z>),
                                                            <'32', 'HPKE_v1', 'shared_secret', gx, 
                                                             'g'^~y>,
                                                            '32'),
                                                     <'HPKE_v1', 'secret', 'blank'>),
                                             <'32', 'HPKE_v1', 'exp', '0x00', 
                                              Extract('blank',
                                                      <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                              Extract('blank',
                                                      <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                       '0x00', ~key_id, kem_id, kdf_id, aead_id>)
                                             >,
                                             '32'),
                                      <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                       'key', '32'),
                Expand(Extract(<gx, ~resp_nonce>,
                               Expand(Expand(Extract(Expand(Extract('blank',
                                                                    <'HPKE_v1', 'eae_prk', z>),
                                                            <'32', 'HPKE_v1', 'shared_secret', gx, 
                                                             'g'^~y>,
                                                            '32'),
                                                     <'HPKE_v1', 'secret', 'blank'>),
                                             <'32', 'HPKE_v1', 'exp', '0x00', 
                                              Extract('blank',
                                                      <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                              Extract('blank',
                                                      <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                       '0x00', ~key_id, kem_id, kdf_id, aead_id>)
                                             >,
                                             '32'),
                                      <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                       'nonce', '32'),
                'blank', ~resp)
          >
     )
     ]
    variants (modulo AC)
     1. ~key_id
              = ~key_id.46
        ~y    = ~y.50
        aad   = aad.51
        aead_id
              = aead_id.52
        ckey  = ckey.53
        cnonce
              = cnonce.54
        gx    = gx.55
        kdf_id
              = kdf_id.56
        kem_id
              = kem_id.57
        request
              = request.58
        z     = gx.55^~y.50
        z.1   = open(Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', gx.55^~y.50>),
                                           <'32', 'HPKE_v1', 'shared_secret', gx.55, 'g'^~y.50>,
                                           '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'key', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                      ~key_id.46, kem_id.57, kdf_id.56, aead_id.52>)
                            >,
                            '32'),
                     Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', gx.55^~y.50>),
                                           <'32', 'HPKE_v1', 'shared_secret', gx.55, 'g'^~y.50>,
                                           '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                      ~key_id.46, kem_id.57, kdf_id.56, aead_id.52>)
                            >,
                            '32'),
                     <'message_ohttp_req', '0x00', ~key_id.46, kem_id.57, kdf_id.56, 
                      aead_id.52>,
                     seal(ckey.53, cnonce.54, aad.51, request.58))
    
     2. ~key_id
              = ~key_id.46
        ~y    = ~y.50
        aad   = <'message_ohttp_req', '0x00', ~key_id.46, kem_id.57, 
                 kdf_id.56, aead_id.52>
        aead_id
              = aead_id.52
        ckey  = Expand(Extract(Expand(Extract('blank',
                                              <'HPKE_v1', 'eae_prk', gx.55^~y.50>),
                                      <'32', 'HPKE_v1', 'shared_secret', gx.55, 'g'^~y.50>, '32'),
                               <'HPKE_v1', 'secret', 'blank'>),
                       <'32', 'HPKE_v1', 'key', '0x00', 
                        Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                        Extract('blank',
                                <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id.46, 
                                 kem_id.57, kdf_id.56, aead_id.52>)
                       >,
                       '32')
        cnonce
              = Expand(Extract(Expand(Extract('blank',
                                              <'HPKE_v1', 'eae_prk', gx.55^~y.50>),
                                      <'32', 'HPKE_v1', 'shared_secret', gx.55, 'g'^~y.50>, '32'),
                               <'HPKE_v1', 'secret', 'blank'>),
                       <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                        Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                        Extract('blank',
                                <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id.46, 
                                 kem_id.57, kdf_id.56, aead_id.52>)
                       >,
                       '32')
        gx    = gx.55
        kdf_id
              = kdf_id.56
        kem_id
              = kem_id.57
        request
              = request.58
        z     = gx.55^~y.50
        z.1   = request.58
    
     3. ~key_id
              = ~key_id.50
        ~y    = ~y.54
        aad   = aad.55
        aead_id
              = aead_id.56
        ckey  = ckey.57
        cnonce
              = cnonce.58
        gx    = z.66^inv(~y.54)
        kdf_id
              = kdf_id.60
        kem_id
              = kem_id.61
        request
              = request.62
        z     = z.66
        z.1   = open(Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', z.66>),
                                           <'32', 'HPKE_v1', 'shared_secret', z.66^inv(~y.54), 
                                            'g'^~y.54>,
                                           '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'key', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                      ~key_id.50, kem_id.61, kdf_id.60, aead_id.56>)
                            >,
                            '32'),
                     Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', z.66>),
                                           <'32', 'HPKE_v1', 'shared_secret', z.66^inv(~y.54), 
                                            'g'^~y.54>,
                                           '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                      ~key_id.50, kem_id.61, kdf_id.60, aead_id.56>)
                            >,
                            '32'),
                     <'message_ohttp_req', '0x00', ~key_id.50, kem_id.61, kdf_id.60, 
                      aead_id.56>,
                     seal(ckey.57, cnonce.58, aad.55, request.62))
    
     4. ~key_id
              = ~key_id.50
        ~y    = ~y.54
        aad   = <'message_ohttp_req', '0x00', ~key_id.50, kem_id.61, 
                 kdf_id.60, aead_id.56>
        aead_id
              = aead_id.56
        ckey  = Expand(Extract(Expand(Extract('blank',
                                              <'HPKE_v1', 'eae_prk', z.66>),
                                      <'32', 'HPKE_v1', 'shared_secret', z.66^inv(~y.54), 'g'^~y.54
                                      >,
                                      '32'),
                               <'HPKE_v1', 'secret', 'blank'>),
                       <'32', 'HPKE_v1', 'key', '0x00', 
                        Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                        Extract('blank',
                                <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id.50, 
                                 kem_id.61, kdf_id.60, aead_id.56>)
                       >,
                       '32')
        cnonce
              = Expand(Extract(Expand(Extract('blank',
                                              <'HPKE_v1', 'eae_prk', z.66>),
                                      <'32', 'HPKE_v1', 'shared_secret', z.66^inv(~y.54), 'g'^~y.54
                                      >,
                                      '32'),
                               <'HPKE_v1', 'secret', 'blank'>),
                       <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                        Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                        Extract('blank',
                                <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id.50, 
                                 kem_id.61, kdf_id.60, aead_id.56>)
                       >,
                       '32')
        gx    = z.66^inv(~y.54)
        kdf_id
              = kdf_id.60
        kem_id
              = kem_id.61
        request
              = request.62
        z     = z.66
        z.1   = request.62
    
     5. ~key_id
              = ~key_id.617
        ~y    = ~y.621
        aad   = aad.622
        aead_id
              = aead_id.623
        ckey  = ckey.624
        cnonce
              = cnonce.625
        gx    = x.1230^x.1231
        kdf_id
              = kdf_id.627
        kem_id
              = kem_id.628
        request
              = request.629
        z     = x.1230^(~y.621*x.1231)
        z.1   = open(Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', x.1230^(~y.621*x.1231)>),
                                           <'32', 'HPKE_v1', 'shared_secret', x.1230^x.1231, 
                                            'g'^~y.621>,
                                           '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'key', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                      ~key_id.617, kem_id.628, kdf_id.627, aead_id.623>)
                            >,
                            '32'),
                     Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', x.1230^(~y.621*x.1231)>),
                                           <'32', 'HPKE_v1', 'shared_secret', x.1230^x.1231, 
                                            'g'^~y.621>,
                                           '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                      ~key_id.617, kem_id.628, kdf_id.627, aead_id.623>)
                            >,
                            '32'),
                     <'message_ohttp_req', '0x00', ~key_id.617, kem_id.628, kdf_id.627, 
                      aead_id.623>,
                     seal(ckey.624, cnonce.625, aad.622, request.629))
    
     6. ~key_id
              = ~key_id.622
        ~y    = ~y.626
        aad   = aad.627
        aead_id
              = aead_id.628
        ckey  = ckey.629
        cnonce
              = cnonce.630
        gx    = x.1240^inv((~y.626*x.1241))
        kdf_id
              = kdf_id.632
        kem_id
              = kem_id.633
        request
              = request.634
        z     = x.1240^inv(x.1241)
        z.1   = open(Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', x.1240^inv(x.1241)>),
                                           <'32', 'HPKE_v1', 'shared_secret', 
                                            x.1240^inv((~y.626*x.1241)), 'g'^~y.626>,
                                           '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'key', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                      ~key_id.622, kem_id.633, kdf_id.632, aead_id.628>)
                            >,
                            '32'),
                     Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', x.1240^inv(x.1241)>),
                                           <'32', 'HPKE_v1', 'shared_secret', 
                                            x.1240^inv((~y.626*x.1241)), 'g'^~y.626>,
                                           '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                      ~key_id.622, kem_id.633, kdf_id.632, aead_id.628>)
                            >,
                            '32'),
                     <'message_ohttp_req', '0x00', ~key_id.622, kem_id.633, kdf_id.632, 
                      aead_id.628>,
                     seal(ckey.629, cnonce.630, aad.627, request.634))
    
     7. ~key_id
              = ~key_id.622
        ~y    = ~y.626
        aad   = aad.627
        aead_id
              = aead_id.628
        ckey  = ckey.629
        cnonce
              = cnonce.630
        gx    = x.1240^(x.1241*inv(~y.626))
        kdf_id
              = kdf_id.632
        kem_id
              = kem_id.633
        request
              = request.634
        z     = x.1240^x.1241
        z.1   = open(Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', x.1240^x.1241>),
                                           <'32', 'HPKE_v1', 'shared_secret', 
                                            x.1240^(x.1241*inv(~y.626)), 'g'^~y.626>,
                                           '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'key', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                      ~key_id.622, kem_id.633, kdf_id.632, aead_id.628>)
                            >,
                            '32'),
                     Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', x.1240^x.1241>),
                                           <'32', 'HPKE_v1', 'shared_secret', 
                                            x.1240^(x.1241*inv(~y.626)), 'g'^~y.626>,
                                           '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                      ~key_id.622, kem_id.633, kdf_id.632, aead_id.628>)
                            >,
                            '32'),
                     <'message_ohttp_req', '0x00', ~key_id.622, kem_id.633, kdf_id.632, 
                      aead_id.628>,
                     seal(ckey.629, cnonce.630, aad.627, request.634))
    
     8. ~key_id
              = ~key_id.623
        ~y    = ~y.627
        aad   = aad.628
        aead_id
              = aead_id.629
        ckey  = ckey.630
        cnonce
              = cnonce.631
        gx    = x.1241^(x.1242*inv((~y.627*x.1243)))
        kdf_id
              = kdf_id.633
        kem_id
              = kem_id.634
        request
              = request.635
        z     = x.1241^(x.1242*inv(x.1243))
        z.1   = open(Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', 
                                                    x.1241^(x.1242*inv(x.1243))>),
                                           <'32', 'HPKE_v1', 'shared_secret', 
                                            x.1241^(x.1242*inv((~y.627*x.1243))), 'g'^~y.627>,
                                           '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'key', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                      ~key_id.623, kem_id.634, kdf_id.633, aead_id.629>)
                            >,
                            '32'),
                     Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', 
                                                    x.1241^(x.1242*inv(x.1243))>),
                                           <'32', 'HPKE_v1', 'shared_secret', 
                                            x.1241^(x.1242*inv((~y.627*x.1243))), 'g'^~y.627>,
                                           '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                      ~key_id.623, kem_id.634, kdf_id.633, aead_id.629>)
                            >,
                            '32'),
                     <'message_ohttp_req', '0x00', ~key_id.623, kem_id.634, kdf_id.633, 
                      aead_id.629>,
                     seal(ckey.630, cnonce.631, aad.628, request.635))
    
     9. ~key_id
              = ~key_id.625
        ~y    = ~y.629
        aad   = <'message_ohttp_req', '0x00', ~key_id.625, kem_id.636, 
                 kdf_id.635, aead_id.631>
        aead_id
              = aead_id.631
        ckey  = Expand(Extract(Expand(Extract('blank',
                                              <'HPKE_v1', 'eae_prk', x.1246^x.1247>),
                                      <'32', 'HPKE_v1', 'shared_secret', 
                                       x.1246^(x.1247*inv(~y.629)), 'g'^~y.629>,
                                      '32'),
                               <'HPKE_v1', 'secret', 'blank'>),
                       <'32', 'HPKE_v1', 'key', '0x00', 
                        Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                        Extract('blank',
                                <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id.625, 
                                 kem_id.636, kdf_id.635, aead_id.631>)
                       >,
                       '32')
        cnonce
              = Expand(Extract(Expand(Extract('blank',
                                              <'HPKE_v1', 'eae_prk', x.1246^x.1247>),
                                      <'32', 'HPKE_v1', 'shared_secret', 
                                       x.1246^(x.1247*inv(~y.629)), 'g'^~y.629>,
                                      '32'),
                               <'HPKE_v1', 'secret', 'blank'>),
                       <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                        Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                        Extract('blank',
                                <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id.625, 
                                 kem_id.636, kdf_id.635, aead_id.631>)
                       >,
                       '32')
        gx    = x.1246^(x.1247*inv(~y.629))
        kdf_id
              = kdf_id.635
        kem_id
              = kem_id.636
        request
              = request.637
        z     = x.1246^x.1247
        z.1   = request.637
    
    10. ~key_id
              = ~key_id.625
        ~y    = ~y.629
        aad   = <'message_ohttp_req', '0x00', ~key_id.625, kem_id.636, 
                 kdf_id.635, aead_id.631>
        aead_id
              = aead_id.631
        ckey  = Expand(Extract(Expand(Extract('blank',
                                              <'HPKE_v1', 'eae_prk', x.1246^inv(x.1247)>),
                                      <'32', 'HPKE_v1', 'shared_secret', 
                                       x.1246^inv((~y.629*x.1247)), 'g'^~y.629>,
                                      '32'),
                               <'HPKE_v1', 'secret', 'blank'>),
                       <'32', 'HPKE_v1', 'key', '0x00', 
                        Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                        Extract('blank',
                                <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id.625, 
                                 kem_id.636, kdf_id.635, aead_id.631>)
                       >,
                       '32')
        cnonce
              = Expand(Extract(Expand(Extract('blank',
                                              <'HPKE_v1', 'eae_prk', x.1246^inv(x.1247)>),
                                      <'32', 'HPKE_v1', 'shared_secret', 
                                       x.1246^inv((~y.629*x.1247)), 'g'^~y.629>,
                                      '32'),
                               <'HPKE_v1', 'secret', 'blank'>),
                       <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                        Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                        Extract('blank',
                                <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id.625, 
                                 kem_id.636, kdf_id.635, aead_id.631>)
                       >,
                       '32')
        gx    = x.1246^inv((~y.629*x.1247))
        kdf_id
              = kdf_id.635
        kem_id
              = kem_id.636
        request
              = request.637
        z     = x.1246^inv(x.1247)
        z.1   = request.637
    
    11. ~key_id
              = ~key_id.625
        ~y    = ~y.629
        aad   = <'message_ohttp_req', '0x00', ~key_id.625, kem_id.636, 
                 kdf_id.635, aead_id.631>
        aead_id
              = aead_id.631
        ckey  = Expand(Extract(Expand(Extract('blank',
                                              <'HPKE_v1', 'eae_prk', x.1246^(~y.629*x.1247)>),
                                      <'32', 'HPKE_v1', 'shared_secret', x.1246^x.1247, 'g'^~y.629>,
                                      '32'),
                               <'HPKE_v1', 'secret', 'blank'>),
                       <'32', 'HPKE_v1', 'key', '0x00', 
                        Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                        Extract('blank',
                                <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id.625, 
                                 kem_id.636, kdf_id.635, aead_id.631>)
                       >,
                       '32')
        cnonce
              = Expand(Extract(Expand(Extract('blank',
                                              <'HPKE_v1', 'eae_prk', x.1246^(~y.629*x.1247)>),
                                      <'32', 'HPKE_v1', 'shared_secret', x.1246^x.1247, 'g'^~y.629>,
                                      '32'),
                               <'HPKE_v1', 'secret', 'blank'>),
                       <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                        Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                        Extract('blank',
                                <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id.625, 
                                 kem_id.636, kdf_id.635, aead_id.631>)
                       >,
                       '32')
        gx    = x.1246^x.1247
        kdf_id
              = kdf_id.635
        kem_id
              = kem_id.636
        request
              = request.637
        z     = x.1246^(~y.629*x.1247)
        z.1   = request.637
    
    12. ~key_id
              = ~key_id.626
        ~y    = ~y.630
        aad   = <'message_ohttp_req', '0x00', ~key_id.626, kem_id.637, 
                 kdf_id.636, aead_id.632>
        aead_id
              = aead_id.632
        ckey  = Expand(Extract(Expand(Extract('blank',
                                              <'HPKE_v1', 'eae_prk', x.1247^(x.1248*inv(x.1249))>),
                                      <'32', 'HPKE_v1', 'shared_secret', 
                                       x.1247^(x.1248*inv((~y.630*x.1249))), 'g'^~y.630>,
                                      '32'),
                               <'HPKE_v1', 'secret', 'blank'>),
                       <'32', 'HPKE_v1', 'key', '0x00', 
                        Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                        Extract('blank',
                                <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id.626, 
                                 kem_id.637, kdf_id.636, aead_id.632>)
                       >,
                       '32')
        cnonce
              = Expand(Extract(Expand(Extract('blank',
                                              <'HPKE_v1', 'eae_prk', x.1247^(x.1248*inv(x.1249))>),
                                      <'32', 'HPKE_v1', 'shared_secret', 
                                       x.1247^(x.1248*inv((~y.630*x.1249))), 'g'^~y.630>,
                                      '32'),
                               <'HPKE_v1', 'secret', 'blank'>),
                       <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                        Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                        Extract('blank',
                                <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id.626, 
                                 kem_id.637, kdf_id.636, aead_id.632>)
                       >,
                       '32')
        gx    = x.1247^(x.1248*inv((~y.630*x.1249)))
        kdf_id
              = kdf_id.636
        kem_id
              = kem_id.637
        request
              = request.638
        z     = x.1247^(x.1248*inv(x.1249))
        z.1   = request.638
  */

rule (modulo E) P_HandleResponse:
   [ P_ResponseHandler( ~ptid, $C, $P, ~k ), In( <nonce, opaque> ) ]
  --[
  P_Done( ~ptid ), MsgSource( senc(<nonce, opaque>, ~k), ~k, opaque )
  ]->
   [ Out( senc(<nonce, opaque>, ~k) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) C_HandleResponse:
   [
   C_ResponseHandler( ~request, $C, gx, $P, ~k, $T, gy, shared_secret,
                      <'message_ohttp_req', '0x00', key_id, kem_id, kdf_id, aead_id>
   ),
   In( senc(<response_nonce, 
             seal(aead_key, aead_nonce, 'blank', response)>,
            ~k)
   )
   ]
  --[
  C_Done( ~request, response, $C, gx, $T, gy ),
  Eq( open(Expand(Extract(<gx, response_nonce>,
                          Expand(Expand(Extract(shared_secret,
                                                <'HPKE_v1', 'secret', 'blank'>),
                                        <'32', 'HPKE_v1', 'exp', '0x00', 
                                         Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                         Extract('blank',
                                                 <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                  '0x00', key_id, kem_id, kdf_id, aead_id>)
                                        >,
                                        '32'),
                                 <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                  'key', '32'),
           Expand(Extract(<gx, response_nonce>,
                          Expand(Expand(Extract(shared_secret,
                                                <'HPKE_v1', 'secret', 'blank'>),
                                        <'32', 'HPKE_v1', 'exp', '0x00', 
                                         Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                         Extract('blank',
                                                 <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                  '0x00', key_id, kem_id, kdf_id, aead_id>)
                                        >,
                                        '32'),
                                 <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                  'nonce', '32'),
           'blank', seal(aead_key, aead_nonce, 'blank', response)),
      response
  )
  ]->
   [ ]

  /*
  rule (modulo AC) C_HandleResponse:
     [
     C_ResponseHandler( ~request, $C, gx, $P, ~k, $T, gy, shared_secret,
                        <'message_ohttp_req', '0x00', key_id, kem_id, kdf_id, aead_id>
     ),
     In( senc(<response_nonce, 
               seal(aead_key, aead_nonce, 'blank', response)>,
              ~k)
     )
     ]
    --[ C_Done( ~request, response, $C, gx, $T, gy ), Eq( z, response )
    ]->
     [ ]
    variants (modulo AC)
    1. aead_id
             = aead_id.32
       aead_key
             = aead_key.33
       aead_nonce
             = aead_nonce.34
       gx    = gx.35
       kdf_id
             = kdf_id.37
       kem_id
             = kem_id.38
       key_id
             = key_id.39
       response
             = response.40
       response_nonce
             = response_nonce.41
       shared_secret
             = shared_secret.42
       z     = open(Expand(Extract(<gx.35, response_nonce.41>,
                                   Expand(Expand(Extract(shared_secret.42,
                                                         <'HPKE_v1', 'secret', 'blank'>),
                                                 <'32', 'HPKE_v1', 'exp', '0x00', 
                                                  Extract('blank',
                                                          <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                  Extract('blank',
                                                          <'HPKE_v1', 'info_hash', 
                                                           'message_ohttp_req', '0x00', key_id.39, 
                                                           kem_id.38, kdf_id.37, aead_id.32>)
                                                 >,
                                                 '32'),
                                          <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                           'key', '32'),
                    Expand(Extract(<gx.35, response_nonce.41>,
                                   Expand(Expand(Extract(shared_secret.42,
                                                         <'HPKE_v1', 'secret', 'blank'>),
                                                 <'32', 'HPKE_v1', 'exp', '0x00', 
                                                  Extract('blank',
                                                          <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                  Extract('blank',
                                                          <'HPKE_v1', 'info_hash', 
                                                           'message_ohttp_req', '0x00', key_id.39, 
                                                           kem_id.38, kdf_id.37, aead_id.32>)
                                                 >,
                                                 '32'),
                                          <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                           'nonce', '32'),
                    'blank', seal(aead_key.33, aead_nonce.34, 'blank', response.40))
    
    2. aead_id
             = aead_id.32
       aead_key
             = Expand(Extract(<gx.35, response_nonce.41>,
                              Expand(Expand(Extract(shared_secret.42,
                                                    <'HPKE_v1', 'secret', 'blank'>),
                                            <'32', 'HPKE_v1', 'exp', '0x00', 
                                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                             Extract('blank',
                                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                      '0x00', key_id.39, kem_id.38, kdf_id.37, 
                                                      aead_id.32>)
                                            >,
                                            '32'),
                                     <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                      'key', '32')
       aead_nonce
             = Expand(Extract(<gx.35, response_nonce.41>,
                              Expand(Expand(Extract(shared_secret.42,
                                                    <'HPKE_v1', 'secret', 'blank'>),
                                            <'32', 'HPKE_v1', 'exp', '0x00', 
                                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                             Extract('blank',
                                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                      '0x00', key_id.39, kem_id.38, kdf_id.37, 
                                                      aead_id.32>)
                                            >,
                                            '32'),
                                     <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                      'nonce', '32')
       gx    = gx.35
       kdf_id
             = kdf_id.37
       kem_id
             = kem_id.38
       key_id
             = key_id.39
       response
             = response.40
       response_nonce
             = response_nonce.41
       shared_secret
             = shared_secret.42
       z     = response.40
  */

rule (modulo E) RevSK:
   [ KeyExI( $X, $Y, ~kxy ) ] --[ RevSk( ~kxy ) ]-> [ Out( ~kxy ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) RevDH:
   [ !Ltk( $A, ~key_id, ~x ) ]
  --[ RevDH( $A, ~key_id, 'g'^~x ) ]->
   [ Out( ~x ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) NonceReuse:
   [ In( seal(k, n, a1, p1) ), In( seal(k, n, a2, p2) ) ]
  --[
  Neq( p1, p2 ), NonceReuse( seal(k, n, a1, p1), p1 ),
  ReuseNonce( k, n, p1, p2 )
  ]->
   [ Out( p1 ) ]

  /* has exactly the trivial AC variant */

lemma MsgSources [sources]:
  all-traces
  "(∀ nonce msg k gx #j.
     (PHQ( senc(<nonce, msg>, k), gx, msg ) @ #j) ⇒
     ((∃ #i.
        (MsgSource( senc(<nonce, msg>, k), k, msg ) @ #i) ∧ (#i < #j)) ∨
      (∃ #i #h.
        (((!KU( gx ) @ #h) ∧ (#h < #j)) ∧ (!KU( msg ) @ #i)) ∧
        (#i < #j)))) ∧
   (∀ k n a p #j.
     (NonceReuse( seal(k, n, a, p), p ) @ #j) ⇒
     ((∃ #i. (SealSources( seal(k, n, a, p) ) @ #i) ∧ (#i < #j)) ∨
      (∃ #i. (!KU( p ) @ #i) ∧ (#i < #j))))"
/*
guarded formula characterizing all counter-examples:
"((∃ nonce msg k gx #j.
    (PHQ( senc(<nonce, msg>, k), gx, msg ) @ #j)
   ∧
    (∀ #i.
      (MsgSource( senc(<nonce, msg>, k), k, msg ) @ #i) ⇒ ¬(#i < #j)) ∧
    (∀ #i #h.
      (!KU( gx ) @ #h) ∧ (!KU( msg ) @ #i)
     ⇒
      ((¬(#h < #j)) ∨ (¬(#i < #j))))) ∨
  (∃ k n a p #j.
    (NonceReuse( seal(k, n, a, p), p ) @ #j)
   ∧
    (∀ #i. (SealSources( seal(k, n, a, p) ) @ #i) ⇒ ¬(#i < #j)) ∧
    (∀ #i. (!KU( p ) @ #i) ⇒ ¬(#i < #j))))"
*/
induction
  case empty_trace
  by contradiction /* from formulas */
next
  case non_empty_trace
  simplify
  solve( (∃ nonce msg k gx #j.
           (PHQ( senc(<nonce, msg>, k), gx, msg ) @ #j)
          ∧
           (∀ #i.
             (MsgSource( senc(<nonce, msg>, k), k, msg ) @ #i) ⇒ ¬(#i < #j)) ∧
           (∀ #i #h.
             (!KU( gx ) @ #h) ∧ (!KU( msg ) @ #i)
            ⇒
             ((¬(#h < #j)) ∨ (¬(#i < #j)))))  ∥
         (∃ k n a p #j.
           (NonceReuse( seal(k, n, a, p), p ) @ #j)
          ∧
           (∀ #i. (SealSources( seal(k, n, a, p) ) @ #i) ⇒ ¬(#i < #j)) ∧
           (∀ #i. (!KU( p ) @ #i) ⇒ ¬(#i < #j))) )
    case case_1
    solve( (last(#j))  ∥
           (∃ #i.
             (MsgSource( senc(<nonce, <key_id, kem_id, kdf_id, aead_id>, gx, 
                               opaque>,
                              ~k),
                         ~k, <<key_id, kem_id, kdf_id, aead_id>, gx, opaque>
              ) @ #i)
            ∧
             (¬(last(#i))) ∧ (#i < #j))  ∥
           (∃ #i #h.
             (!KU( gx ) @ #h) ∧
             (!KU( <<key_id, kem_id, kdf_id, aead_id>, gx, opaque> ) @ #i)
            ∧
             (¬(last(#h))) ∧ (¬(last(#i))) ∧ (#h < #j) ∧ (#i < #j)) )
      case case_1
      solve( KeyExS( $C, $P, ~k ) ▶₀ #j )
        case Starter
        solve( !Pk( $T, <key_id, kem_id, kdf_id, aead_id>, gy ) ▶₂ #j )
          case Generate_DH_key_pair
          solve( !KU( senc(<nonce, <~key_id, $kem_id, $kdf_id, $aead_id>, 
                            gx, opaque>,
                           ~k)
                 ) @ #vk )
            case C_QueryGeneration
            by contradiction /* from formulas */
          next
            case NonceReuse
            solve( (∃ #i.
                     (SealSources( seal(k.1, n, a1, t) ) @ #i)
                    ∧
                     (¬(last(#i))) ∧ (#i < #vr.2))  ∥
                   (∃ #i. (!KU( t ) @ #i) ∧ (¬(last(#i))) ∧ (#i < #vr.2)) )
              case case_1
              solve( SealSources( seal(k.1, n, a1, t) ) @ #i )
                case C_QueryGeneration
                by contradiction /* impossible chain */
              next
                case T_HandleQuery
                by contradiction /* impossible chain */
              qed
            next
              case case_2
              by contradiction /* cyclic */
            qed
          next
            case P_HandleQuery_case_1
            solve( (∃ #i.
                     (MsgSource( senc(<cid, 
                                       <~key_id.1, $kem_id.1, $kdf_id.1, $aead_id.1>, gx.1, opaque.1
                                      >,
                                      ~k.1),
                                 ~k.1,
                                 <<~key_id.1, $kem_id.1, $kdf_id.1, $aead_id.1>, gx.1, opaque.1>
                      ) @ #i)
                    ∧
                     (¬(last(#i))) ∧ (#i < #vr.2))  ∥
                   (∃ #i #h.
                     (!KU( gx.1 ) @ #h) ∧
                     (!KU( <<~key_id.1, $kem_id.1, $kdf_id.1, $aead_id.1>, gx.1, 
                            opaque.1>
                      ) @ #i)
                    ∧
                     (¬(last(#h))) ∧ (¬(last(#i))) ∧ (#h < #vr.2) ∧ (#i < #vr.2)) )
              case case_1
              solve( MsgSource( senc(<cid, 
                                      <~key_id.1, $kem_id.1, $kdf_id.1, $aead_id.1>, gx.1, opaque.1
                                     >,
                                     ~k.1),
                                ~k.1,
                                <<~key_id.1, $kem_id.1, $kdf_id.1, $aead_id.1>, gx.1, opaque.1>
                     ) @ #i )
                case C_QueryGeneration
                by contradiction /* impossible chain */
              next
                case P_HandleResponse
                by contradiction /* cyclic */
              qed
            next
              case case_2
              by contradiction /* cyclic */
            qed
          next
            case P_HandleQuery_case_2
            solve( (∃ #i.
                     (MsgSource( senc(<cid, 
                                       <~key_id.1, $kem_id.1, $kdf_id.1, $aead_id.1>, gx.1, opaque.1
                                      >,
                                      ~k.1),
                                 ~k.1,
                                 <<~key_id.1, $kem_id.1, $kdf_id.1, $aead_id.1>, gx.1, opaque.1>
                      ) @ #i)
                    ∧
                     (¬(last(#i))) ∧ (#i < #vr.2))  ∥
                   (∃ #i #h.
                     (!KU( gx.1 ) @ #h) ∧
                     (!KU( <<~key_id.1, $kem_id.1, $kdf_id.1, $aead_id.1>, gx.1, 
                            opaque.1>
                      ) @ #i)
                    ∧
                     (¬(last(#h))) ∧ (¬(last(#i))) ∧ (#h < #vr.2) ∧ (#i < #vr.2)) )
              case case_1
              solve( MsgSource( senc(<cid, 
                                      <~key_id.1, $kem_id.1, $kdf_id.1, $aead_id.1>, gx.1, opaque.1
                                     >,
                                     ~k.1),
                                ~k.1,
                                <<~key_id.1, $kem_id.1, $kdf_id.1, $aead_id.1>, gx.1, opaque.1>
                     ) @ #i )
                case C_QueryGeneration
                solve( (#vr.5, 0) ~~> (#vk, 0) )
                  case d_3_open
                  by contradiction /* impossible chain */
                qed
              next
                case P_HandleResponse
                by contradiction /* cyclic */
              qed
            next
              case case_2
              by contradiction /* cyclic */
            qed
          next
            case P_HandleResponse
            by contradiction /* cyclic */
          next
            case c_senc
            by contradiction /* from formulas */
          qed
        qed
      qed
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      by contradiction /* from formulas */
    qed
  next
    case case_2
    solve( (last(#j))  ∥
           (∃ #i.
             (SealSources( seal(k, n, a, p) ) @ #i)
            ∧
             (¬(last(#i))) ∧ (#i < #j))  ∥
           (∃ #i. (!KU( p ) @ #i) ∧ (¬(last(#i))) ∧ (#i < #j)) )
      case case_1
      solve( !KU( seal(k, n, a, p) ) @ #vk )
        case C_QueryGeneration
        by contradiction /* from formulas */
      next
        case NonceReuse
        solve( (∃ #i.
                 (SealSources( seal(k.1, n.1, a1, t) ) @ #i)
                ∧
                 (¬(last(#i))) ∧ (#i < #vr))  ∥
               (∃ #i. (!KU( t ) @ #i) ∧ (¬(last(#i))) ∧ (#i < #vr)) )
          case case_1
          solve( SealSources( seal(k.1, n.1, a1, t) ) @ #i )
            case C_QueryGeneration
            by contradiction /* impossible chain */
          next
            case T_HandleQuery
            by contradiction /* impossible chain */
          qed
        next
          case case_2
          by contradiction /* cyclic */
        qed
      next
        case P_HandleQuery_case_1
        solve( (∃ #i.
                 (MsgSource( senc(<cid, <~key_id, $kem_id, $kdf_id, $aead_id>, gx, 
                                   opaque>,
                                  ~k.1),
                             ~k.1, <<~key_id, $kem_id, $kdf_id, $aead_id>, gx, opaque>
                  ) @ #i)
                ∧
                 (¬(last(#i))) ∧ (#i < #vr))  ∥
               (∃ #i #h.
                 (!KU( gx ) @ #h) ∧
                 (!KU( <<~key_id, $kem_id, $kdf_id, $aead_id>, gx, opaque> ) @ #i)
                ∧
                 (¬(last(#h))) ∧ (¬(last(#i))) ∧ (#h < #vr) ∧ (#i < #vr)) )
          case case_1
          solve( MsgSource( senc(<cid, 
                                  <~key_id, $kem_id, $kdf_id, $aead_id>, gx, opaque>,
                                 ~k.1),
                            ~k.1, <<~key_id, $kem_id, $kdf_id, $aead_id>, gx, opaque>
                 ) @ #i )
            case C_QueryGeneration
            by contradiction /* impossible chain */
          next
            case P_HandleResponse
            by contradiction /* cyclic */
          qed
        next
          case case_2
          by contradiction /* cyclic */
        qed
      next
        case P_HandleQuery_case_2
        solve( (∃ #i.
                 (MsgSource( senc(<cid, <~key_id, $kem_id, $kdf_id, $aead_id>, gx, 
                                   opaque>,
                                  ~k.1),
                             ~k.1, <<~key_id, $kem_id, $kdf_id, $aead_id>, gx, opaque>
                  ) @ #i)
                ∧
                 (¬(last(#i))) ∧ (#i < #vr))  ∥
               (∃ #i #h.
                 (!KU( gx ) @ #h) ∧
                 (!KU( <<~key_id, $kem_id, $kdf_id, $aead_id>, gx, opaque> ) @ #i)
                ∧
                 (¬(last(#h))) ∧ (¬(last(#i))) ∧ (#h < #vr) ∧ (#i < #vr)) )
          case case_1
          solve( MsgSource( senc(<cid, 
                                  <~key_id, $kem_id, $kdf_id, $aead_id>, gx, opaque>,
                                 ~k.1),
                            ~k.1, <<~key_id, $kem_id, $kdf_id, $aead_id>, gx, opaque>
                 ) @ #i )
            case C_QueryGeneration
            solve( (#vr.3, 0) ~~> (#vk, 0) )
              case d_3_open
              by contradiction /* impossible chain */
            next
              case seal
              by contradiction /* from formulas */
            qed
          next
            case P_HandleResponse
            by contradiction /* cyclic */
          qed
        next
          case case_2
          by contradiction /* cyclic */
        qed
      next
        case T_HandleQuery
        by contradiction /* from formulas */
      next
        case c_seal
        by contradiction /* from formulas */
      qed
    next
      case case_2
      by contradiction /* from formulas */
    next
      case case_3
      by contradiction /* from formulas */
    qed
  qed
qed

lemma end_to_end:
  exists-trace
  "∃ req resp C gx T gy #i. C_Done( req, resp, C, gx, T, gy ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ req resp C gx T gy #i. (C_Done( req, resp, C, gx, T, gy ) @ #i)"
*/
simplify
solve( C_ResponseHandler( ~request, $C, gx, $P, ~k, $T, gy,
                          shared_secret,
                          <'message_ohttp_req', '0x00', key_id, kem_id, kdf_id, aead_id>
       ) ▶₀ #i )
  case C_QueryGeneration
  solve( !KU( senc(<response_nonce, 
                    seal(Expand(Extract(<'g'^~x, response_nonce>,
                                        Expand(Expand(Extract(Expand(Extract('blank',
                                                                             <'HPKE_v1', 'eae_prk', 
                                                                              'g'^(~x*~x.1)>),
                                                                     <'32', 'HPKE_v1', 
                                                                      'shared_secret', 'g'^~x, 
                                                                      'g'^~x.1>,
                                                                     '32'),
                                                              <'HPKE_v1', 'secret', 'blank'>),
                                                      <'32', 'HPKE_v1', 'exp', '0x00', 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'psk_id_hash', 'blank'
                                                               >), 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'info_hash', 
                                                                'message_ohttp_req', '0x00', 
                                                                ~key_id, $kem_id, $kdf_id, $aead_id
                                                               >)
                                                      >,
                                                      '32'),
                                               <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                               '32')),
                                'key', '32'),
                         Expand(Extract(<'g'^~x, response_nonce>,
                                        Expand(Expand(Extract(Expand(Extract('blank',
                                                                             <'HPKE_v1', 'eae_prk', 
                                                                              'g'^(~x*~x.1)>),
                                                                     <'32', 'HPKE_v1', 
                                                                      'shared_secret', 'g'^~x, 
                                                                      'g'^~x.1>,
                                                                     '32'),
                                                              <'HPKE_v1', 'secret', 'blank'>),
                                                      <'32', 'HPKE_v1', 'exp', '0x00', 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'psk_id_hash', 'blank'
                                                               >), 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'info_hash', 
                                                                'message_ohttp_req', '0x00', 
                                                                ~key_id, $kem_id, $kdf_id, $aead_id
                                                               >)
                                                      >,
                                                      '32'),
                                               <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                               '32')),
                                'nonce', '32'),
                         'blank', resp)
                   >,
                   ~k)
         ) @ #vk )
    case P_HandleResponse
    solve( !KU( seal(Expand(Extract(<'g'^~x, response_nonce>,
                                    Expand(Expand(Extract(Expand(Extract('blank',
                                                                         <'HPKE_v1', 'eae_prk', 
                                                                          'g'^(~x*~x.1)>),
                                                                 <'32', 'HPKE_v1', 'shared_secret', 
                                                                  'g'^~x, 'g'^~x.1>,
                                                                 '32'),
                                                          <'HPKE_v1', 'secret', 'blank'>),
                                                  <'32', 'HPKE_v1', 'exp', '0x00', 
                                                   Extract('blank',
                                                           <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                   Extract('blank',
                                                           <'HPKE_v1', 'info_hash', 
                                                            'message_ohttp_req', '0x00', ~key_id, 
                                                            $kem_id, $kdf_id, $aead_id>)
                                                  >,
                                                  '32'),
                                           <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                            'key', '32'),
                     Expand(Extract(<'g'^~x, response_nonce>,
                                    Expand(Expand(Extract(Expand(Extract('blank',
                                                                         <'HPKE_v1', 'eae_prk', 
                                                                          'g'^(~x*~x.1)>),
                                                                 <'32', 'HPKE_v1', 'shared_secret', 
                                                                  'g'^~x, 'g'^~x.1>,
                                                                 '32'),
                                                          <'HPKE_v1', 'secret', 'blank'>),
                                                  <'32', 'HPKE_v1', 'exp', '0x00', 
                                                   Extract('blank',
                                                           <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                   Extract('blank',
                                                           <'HPKE_v1', 'info_hash', 
                                                            'message_ohttp_req', '0x00', ~key_id, 
                                                            $kem_id, $kdf_id, $aead_id>)
                                                  >,
                                                  '32'),
                                           <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                            'nonce', '32'),
                     'blank', resp)
           ) @ #vk.3 )
      case T_HandleQuery
      solve( !KU( senc(<cid.1, 
                        <~key_id.1, $kem_id.1, $kdf_id.1, $aead_id.1>, gx, opaque>,
                       ~k)
             ) @ #vk.4 )
        case C_QueryGeneration
        solve( !KU( seal(Expand(Extract(Expand(Extract('blank',
                                                       <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                               '32'),
                                        <'HPKE_v1', 'secret', 'blank'>),
                                <'32', 'HPKE_v1', 'key', '0x00', 
                                 Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                 Extract('blank',
                                         <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                          ~key_id, $kem_id, $kdf_id, $aead_id>)
                                >,
                                '32'),
                         Expand(Extract(Expand(Extract('blank',
                                                       <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                               '32'),
                                        <'HPKE_v1', 'secret', 'blank'>),
                                <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                                 Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                 Extract('blank',
                                         <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                          ~key_id, $kem_id, $kdf_id, $aead_id>)
                                >,
                                '32'),
                         <'message_ohttp_req', '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>,
                         request.1)
               ) @ #vk.17 )
          case C_QueryGeneration
          by sorry
        next
          case P_HandleQuery
          solve( !KU( ~resp_nonce ) @ #vk.5 )
            case T_HandleQuery
            solve( !KU( ~key_id ) @ #vk.11 )
              case C_QueryGeneration
              by sorry
            next
              case Generate_DH_key_pair
              solve( !KU( 'g'^~x ) @ #vk.17 )
                case P_HandleQuery
                SOLVED // trace found
              qed
            next
              case P_HandleQuery
              by sorry
            qed
          qed
        next
          case c_seal
          by sorry
        qed
      next
        case c_senc
        by sorry
      qed
    next
      case c_seal
      by sorry
    qed
  next
    case c_senc
    by sorry
  qed
qed

lemma ss_match:
  all-traces
  "∀ gx gy ss #j.
    (T_SS( gx, gy, ss ) @ #j) ⇒
    ((∃ #i. (C_SS( gx, gy, ss ) @ #i) ∧ (#i < #j)) ∨
     (∃ #i. (!KU( ss ) @ #i) ∧ (#i < #j)))"
/*
guarded formula characterizing all counter-examples:
"∃ gx gy ss #j.
  (T_SS( gx, gy, ss ) @ #j)
 ∧
  (∀ #i. (C_SS( gx, gy, ss ) @ #i) ⇒ ¬(#i < #j)) ∧
  (∀ #i. (!KU( ss ) @ #i) ⇒ ¬(#i < #j))"
*/
simplify
solve( !Ltk( $T, <~key_id, kem_id, kdf_id, aead_id>, ~y ) ▶₁ #j )
  case Generate_DH_key_pair
  solve( !KU( seal(Expand(Extract(Expand(Extract('blank',
                                                 <'HPKE_v1', 'eae_prk', z>),
                                         <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>, '32'),
                                  <'HPKE_v1', 'secret', 'blank'>),
                          <'32', 'HPKE_v1', 'key', '0x00', 
                           Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                           Extract('blank',
                                   <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                    $kem_id, $kdf_id, $aead_id>)
                          >,
                          '32'),
                   Expand(Extract(Expand(Extract('blank', <'HPKE_v1', 'eae_prk', z>),
                                         <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>, '32'),
                                  <'HPKE_v1', 'secret', 'blank'>),
                          <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                           Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                           Extract('blank',
                                   <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                    $kem_id, $kdf_id, $aead_id>)
                          >,
                          '32'),
                   <'message_ohttp_req', '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>,
                   request)
         ) @ #vk.12 )
    case C_QueryGeneration
    by contradiction /* from formulas */
  next
    case P_HandleQuery
    by contradiction /* from formulas */
  next
    case c_seal
    solve( !KU( Expand(Extract(Expand(Extract('blank',
                                              <'HPKE_v1', 'eae_prk', z>),
                                      <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>, '32'),
                               <'HPKE_v1', 'secret', 'blank'>),
                       <'32', 'HPKE_v1', 'key', '0x00', 
                        Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                        Extract('blank',
                                <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                 $kem_id, $kdf_id, $aead_id>)
                       >,
                       '32')
           ) @ #vk.14 )
      case c_Expand
      solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                <'HPKE_v1', 'eae_prk', z>),
                                        <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>, '32'),
                                 <'HPKE_v1', 'secret', 'blank'>),
                         <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                          Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                          Extract('blank',
                                  <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                   $kem_id, $kdf_id, $aead_id>)
                         >,
                         '32')
             ) @ #vk.16 )
        case c_Expand
        solve( !KU( Extract(Expand(Extract('blank',
                                           <'HPKE_v1', 'eae_prk', z>),
                                   <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>, '32'),
                            <'HPKE_v1', 'secret', 'blank'>)
               ) @ #vk.23 )
          case c_Extract
          by contradiction /* from formulas */
        qed
      qed
    qed
  qed
qed

lemma secret_request [reuse]:
  all-traces
  "∀ C gx P key T gy cid req #j #k.
    ((C_QG( C, gx, P, key, T, gy, cid, req ) @ #j) ∧
     (!KU( req ) @ #k)) ⇒
    (∃ sig_algs #i. (RevDH( T, sig_algs, gy ) @ #i) ∧ (#i < #k))"
/*
guarded formula characterizing all counter-examples:
"∃ C gx P key T gy cid req #j #k.
  (C_QG( C, gx, P, key, T, gy, cid, req ) @ #j) ∧ (!KU( req ) @ #k)
 ∧
  ∀ sig_algs #i. (RevDH( T, sig_algs, gy ) @ #i) ⇒ ¬(#i < #k)"
*/
simplify
solve( KeyExC( $C, $P, ~k ) ▶₀ #j )
  case Starter
  solve( !Pk( $T, <~key_id, kem_id, kdf_id, aead_id>, gy ) ▶₁ #j )
    case Generate_DH_key_pair
    solve( !KU( ~req ) @ #k.1 )
      case C_QueryGeneration
      solve( !KU( 'g'^(~x*~x.1) ) @ #vk.51 )
        case C_QueryGeneration
        by solve( !KU( ~x ) @ #vk.52 )
      next
        case Generate_DH_key_pair
        by solve( !KU( ~x.1 ) @ #vk.52 )
      next
        case c_exp
        by solve( !KU( ~x ) @ #vk.54 )
      qed
    next
      case NonceReuse
      solve( !KU( seal(Expand(Extract(Expand(Extract('blank',
                                                     <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                             <'32', 'HPKE_v1', 'shared_secret', 'g'^~x.1, 'g'^~x>,
                                             '32'),
                                      <'HPKE_v1', 'secret', 'blank'>),
                              <'32', 'HPKE_v1', 'key', '0x00', 
                               Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                               Extract('blank',
                                       <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                        ~key_id, $kem_id, $kdf_id, $aead_id>)
                              >,
                              '32'),
                       Expand(Extract(Expand(Extract('blank',
                                                     <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                             <'32', 'HPKE_v1', 'shared_secret', 'g'^~x.1, 'g'^~x>,
                                             '32'),
                                      <'HPKE_v1', 'secret', 'blank'>),
                              <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                               Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                               Extract('blank',
                                       <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                        ~key_id, $kem_id, $kdf_id, $aead_id>)
                              >,
                              '32'),
                       <'message_ohttp_req', '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>,
                       ~req)
             ) @ #vk )
        case C_QueryGeneration
        solve( !KU( seal(Expand(Extract(Expand(Extract('blank',
                                                       <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x.1, 'g'^~x>,
                                               '32'),
                                        <'HPKE_v1', 'secret', 'blank'>),
                                <'32', 'HPKE_v1', 'key', '0x00', 
                                 Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                 Extract('blank',
                                         <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                          ~key_id, $kem_id, $kdf_id, $aead_id>)
                                >,
                                '32'),
                         Expand(Extract(Expand(Extract('blank',
                                                       <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x.1, 'g'^~x>,
                                               '32'),
                                        <'HPKE_v1', 'secret', 'blank'>),
                                <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                                 Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                 Extract('blank',
                                         <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                          ~key_id, $kem_id, $kdf_id, $aead_id>)
                                >,
                                '32'),
                         a2, p2)
               ) @ #vk.1 )
          case C_QueryGeneration
          by contradiction /* from formulas */
        next
          case c_seal
          solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                    <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                            <'32', 'HPKE_v1', 'shared_secret', 'g'^~x.1, 'g'^~x>,
                                            '32'),
                                     <'HPKE_v1', 'secret', 'blank'>),
                             <'32', 'HPKE_v1', 'key', '0x00', 
                              Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                              Extract('blank',
                                      <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                       ~key_id, $kem_id, $kdf_id, $aead_id>)
                             >,
                             '32')
                 ) @ #vk.3 )
            case c_Expand
            solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                      <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                              <'32', 'HPKE_v1', 'shared_secret', 'g'^~x.1, 'g'^~x>,
                                              '32'),
                                       <'HPKE_v1', 'secret', 'blank'>),
                               <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                                Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                Extract('blank',
                                        <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                         ~key_id, $kem_id, $kdf_id, $aead_id>)
                               >,
                               '32')
                   ) @ #vk.4 )
              case c_Expand
              solve( !KU( Extract(Expand(Extract('blank',
                                                 <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                         <'32', 'HPKE_v1', 'shared_secret', 'g'^~x.1, 'g'^~x>,
                                         '32'),
                                  <'HPKE_v1', 'secret', 'blank'>)
                     ) @ #vk.7 )
                case c_Extract
                solve( !KU( Extract('blank',
                                    <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                     $kem_id, $kdf_id, $aead_id>)
                       ) @ #vk.22 )
                  case c_Extract
                  solve( !KU( Expand(Extract('blank',
                                             <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                     <'32', 'HPKE_v1', 'shared_secret', 'g'^~x.1, 'g'^~x>, '32')
                         ) @ #vk.26 )
                    case c_Expand
                    solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>)
                           ) @ #vk.43 )
                      case c_Extract
                      solve( !KU( 'g'^(~x*~x.1) ) @ #vk.52 )
                        case C_QueryGeneration
                        by solve( !KU( ~x ) @ #vk.53 )
                      next
                        case Generate_DH_key_pair
                        by solve( !KU( ~x.1 ) @ #vk.53 )
                      next
                        case c_exp
                        by solve( !KU( ~x ) @ #vk.55 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case P_HandleQuery
        solve( !KU( seal(Expand(Extract(Expand(Extract('blank',
                                                       <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x.1, 'g'^~x>,
                                               '32'),
                                        <'HPKE_v1', 'secret', 'blank'>),
                                <'32', 'HPKE_v1', 'key', '0x00', 
                                 Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                 Extract('blank',
                                         <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                          ~key_id, $kem_id, $kdf_id, $aead_id>)
                                >,
                                '32'),
                         Expand(Extract(Expand(Extract('blank',
                                                       <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x.1, 'g'^~x>,
                                               '32'),
                                        <'HPKE_v1', 'secret', 'blank'>),
                                <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                                 Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                 Extract('blank',
                                         <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                          ~key_id, $kem_id, $kdf_id, $aead_id>)
                                >,
                                '32'),
                         a2, p2)
               ) @ #vk.1 )
          case P_HandleQuery
          by contradiction /* from formulas */
        next
          case c_seal
          solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                    <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                            <'32', 'HPKE_v1', 'shared_secret', 'g'^~x.1, 'g'^~x>,
                                            '32'),
                                     <'HPKE_v1', 'secret', 'blank'>),
                             <'32', 'HPKE_v1', 'key', '0x00', 
                              Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                              Extract('blank',
                                      <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                       ~key_id, $kem_id, $kdf_id, $aead_id>)
                             >,
                             '32')
                 ) @ #vk.3 )
            case c_Expand
            solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                      <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                              <'32', 'HPKE_v1', 'shared_secret', 'g'^~x.1, 'g'^~x>,
                                              '32'),
                                       <'HPKE_v1', 'secret', 'blank'>),
                               <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                                Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                Extract('blank',
                                        <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                         ~key_id, $kem_id, $kdf_id, $aead_id>)
                               >,
                               '32')
                   ) @ #vk.4 )
              case c_Expand
              solve( !KU( Extract(Expand(Extract('blank',
                                                 <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                         <'32', 'HPKE_v1', 'shared_secret', 'g'^~x.1, 'g'^~x>,
                                         '32'),
                                  <'HPKE_v1', 'secret', 'blank'>)
                     ) @ #vk.7 )
                case c_Extract
                solve( !KU( Expand(Extract('blank',
                                           <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                   <'32', 'HPKE_v1', 'shared_secret', 'g'^~x.1, 'g'^~x>, '32')
                       ) @ #vk.24 )
                  case c_Expand
                  solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>)
                         ) @ #vk.30 )
                    case c_Extract
                    solve( !KU( 'g'^(~x*~x.1) ) @ #vk.39 )
                      case Generate_DH_key_pair
                      by solve( !KU( ~x.1 ) @ #vk.40 )
                    next
                      case P_HandleQuery
                      by solve( !KU( ~x ) @ #vk.40 )
                    next
                      case c_exp
                      by solve( !KU( ~x ) @ #vk.42 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case c_seal
        by contradiction /* cyclic */
      qed
    next
      case P_HandleQuery
      solve( !KU( 'g'^(~x*~x.1) ) @ #vk.51 )
        case Generate_DH_key_pair
        by solve( !KU( ~x.1 ) @ #vk.52 )
      next
        case P_HandleQuery
        by solve( !KU( ~x ) @ #vk.52 )
      next
        case c_exp
        by solve( !KU( ~x ) @ #vk.54 )
      qed
    qed
  qed
qed

lemma secret_response:
  all-traces
  "∀ tid T gx gy req resp #j #k.
    ((T_Answer( tid, T, gx, gy, req, resp ) @ #j) ∧
     (!KU( resp ) @ #k)) ⇒
    ((∃ sig_algs #i. (RevDH( T, sig_algs, gy ) @ #i) ∧ (#i < #k)) ∨
     (∃ #i. (!KU( req ) @ #i) ∧ (#i < #k)))"
/*
guarded formula characterizing all counter-examples:
"∃ tid T gx gy req resp #j #k.
  (T_Answer( tid, T, gx, gy, req, resp ) @ #j) ∧ (!KU( resp ) @ #k)
 ∧
  (∀ sig_algs #i. (RevDH( T, sig_algs, gy ) @ #i) ⇒ ¬(#i < #k)) ∧
  (∀ #i. (!KU( req ) @ #i) ⇒ ¬(#i < #k))"
*/
simplify
solve( !Ltk( $T, <~key_id, kem_id, kdf_id, aead_id>, ~y ) ▶₁ #j )
  case Generate_DH_key_pair
  solve( !KU( ~resp ) @ #k )
    case NonceReuse
    solve( !KU( seal(Expand(Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', z>),
                                           <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>, '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'key', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                      $kem_id, $kdf_id, $aead_id>)
                            >,
                            '32'),
                     Expand(Extract(Expand(Extract('blank', <'HPKE_v1', 'eae_prk', z>),
                                           <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>, '32'),
                                    <'HPKE_v1', 'secret', 'blank'>),
                            <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                             Extract('blank',
                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                      $kem_id, $kdf_id, $aead_id>)
                            >,
                            '32'),
                     <'message_ohttp_req', '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>,
                     req)
           ) @ #vk.12 )
      case C_QueryGeneration
      solve( !KU( seal(Expand(Extract(<'g'^~x, ~resp_nonce>,
                                      Expand(Expand(Extract(Expand(Extract('blank',
                                                                           <'HPKE_v1', 'eae_prk', 
                                                                            'g'^(~x*~y)>),
                                                                   <'32', 'HPKE_v1', 
                                                                    'shared_secret', 'g'^~x, 'g'^~y
                                                                   >,
                                                                   '32'),
                                                            <'HPKE_v1', 'secret', 'blank'>),
                                                    <'32', 'HPKE_v1', 'exp', '0x00', 
                                                     Extract('blank',
                                                             <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                     Extract('blank',
                                                             <'HPKE_v1', 'info_hash', 
                                                              'message_ohttp_req', '0x00', ~key_id, 
                                                              $kem_id, $kdf_id, $aead_id>)
                                                    >,
                                                    '32'),
                                             <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                              'key', '32'),
                       Expand(Extract(<'g'^~x, ~resp_nonce>,
                                      Expand(Expand(Extract(Expand(Extract('blank',
                                                                           <'HPKE_v1', 'eae_prk', 
                                                                            'g'^(~x*~y)>),
                                                                   <'32', 'HPKE_v1', 
                                                                    'shared_secret', 'g'^~x, 'g'^~y
                                                                   >,
                                                                   '32'),
                                                            <'HPKE_v1', 'secret', 'blank'>),
                                                    <'32', 'HPKE_v1', 'exp', '0x00', 
                                                     Extract('blank',
                                                             <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                     Extract('blank',
                                                             <'HPKE_v1', 'info_hash', 
                                                              'message_ohttp_req', '0x00', ~key_id, 
                                                              $kem_id, $kdf_id, $aead_id>)
                                                    >,
                                                    '32'),
                                             <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                              'nonce', '32'),
                       'blank', ~resp)
             ) @ #vk.13 )
        case T_HandleQuery
        solve( !KU( seal(Expand(Extract(<'g'^~x, ~resp_nonce>,
                                        Expand(Expand(Extract(Expand(Extract('blank',
                                                                             <'HPKE_v1', 'eae_prk', 
                                                                              'g'^(~x*~y)>),
                                                                     <'32', 'HPKE_v1', 
                                                                      'shared_secret', 'g'^~x, 
                                                                      'g'^~y>,
                                                                     '32'),
                                                              <'HPKE_v1', 'secret', 'blank'>),
                                                      <'32', 'HPKE_v1', 'exp', '0x00', 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'psk_id_hash', 'blank'
                                                               >), 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'info_hash', 
                                                                'message_ohttp_req', '0x00', 
                                                                ~key_id, $kem_id, $kdf_id, $aead_id
                                                               >)
                                                      >,
                                                      '32'),
                                               <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                               '32')),
                                'key', '32'),
                         Expand(Extract(<'g'^~x, ~resp_nonce>,
                                        Expand(Expand(Extract(Expand(Extract('blank',
                                                                             <'HPKE_v1', 'eae_prk', 
                                                                              'g'^(~x*~y)>),
                                                                     <'32', 'HPKE_v1', 
                                                                      'shared_secret', 'g'^~x, 
                                                                      'g'^~y>,
                                                                     '32'),
                                                              <'HPKE_v1', 'secret', 'blank'>),
                                                      <'32', 'HPKE_v1', 'exp', '0x00', 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'psk_id_hash', 'blank'
                                                               >), 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'info_hash', 
                                                                'message_ohttp_req', '0x00', 
                                                                ~key_id, $kem_id, $kdf_id, $aead_id
                                                               >)
                                                      >,
                                                      '32'),
                                               <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                               '32')),
                                'nonce', '32'),
                         a2, p2)
               ) @ #vk.14 )
          case T_HandleQuery
          by contradiction /* from formulas */
        next
          case c_seal
          solve( !KU( Expand(Extract(<'g'^~x, ~resp_nonce>,
                                     Expand(Expand(Extract(Expand(Extract('blank',
                                                                          <'HPKE_v1', 'eae_prk', 
                                                                           'g'^(~x*~y)>),
                                                                  <'32', 'HPKE_v1', 
                                                                   'shared_secret', 'g'^~x, 'g'^~y>,
                                                                  '32'),
                                                           <'HPKE_v1', 'secret', 'blank'>),
                                                   <'32', 'HPKE_v1', 'exp', '0x00', 
                                                    Extract('blank',
                                                            <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                    Extract('blank',
                                                            <'HPKE_v1', 'info_hash', 
                                                             'message_ohttp_req', '0x00', ~key_id, 
                                                             $kem_id, $kdf_id, $aead_id>)
                                                   >,
                                                   '32'),
                                            <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                             'key', '32')
                 ) @ #vk.16 )
            case c_Expand
            solve( !KU( Expand(Extract(<'g'^~x, ~resp_nonce>,
                                       Expand(Expand(Extract(Expand(Extract('blank',
                                                                            <'HPKE_v1', 'eae_prk', 
                                                                             'g'^(~x*~y)>),
                                                                    <'32', 'HPKE_v1', 
                                                                     'shared_secret', 'g'^~x, 'g'^~y
                                                                    >,
                                                                    '32'),
                                                             <'HPKE_v1', 'secret', 'blank'>),
                                                     <'32', 'HPKE_v1', 'exp', '0x00', 
                                                      Extract('blank',
                                                              <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                      Extract('blank',
                                                              <'HPKE_v1', 'info_hash', 
                                                               'message_ohttp_req', '0x00', 
                                                               ~key_id, $kem_id, $kdf_id, $aead_id>)
                                                     >,
                                                     '32'),
                                              <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                               'nonce', '32')
                   ) @ #vk.17 )
              case c_Expand
              solve( !KU( Extract(<'g'^~x, ~resp_nonce>,
                                  Expand(Expand(Extract(Expand(Extract('blank',
                                                                       <'HPKE_v1', 'eae_prk', 
                                                                        'g'^(~x*~y)>),
                                                               <'32', 'HPKE_v1', 'shared_secret', 
                                                                'g'^~x, 'g'^~y>,
                                                               '32'),
                                                        <'HPKE_v1', 'secret', 'blank'>),
                                                <'32', 'HPKE_v1', 'exp', '0x00', 
                                                 Extract('blank',
                                                         <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                 Extract('blank',
                                                         <'HPKE_v1', 'info_hash', 
                                                          'message_ohttp_req', '0x00', ~key_id, 
                                                          $kem_id, $kdf_id, $aead_id>)
                                                >,
                                                '32'),
                                         <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32'))
                     ) @ #vk.20 )
                case c_Extract
                solve( !KU( Expand(Expand(Extract(Expand(Extract('blank',
                                                                 <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)
                                                                 >),
                                                         <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 
                                                          'g'^~y>,
                                                         '32'),
                                                  <'HPKE_v1', 'secret', 'blank'>),
                                          <'32', 'HPKE_v1', 'exp', '0x00', 
                                           Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                           Extract('blank',
                                                   <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                    '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>)
                                          >,
                                          '32'),
                                   <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')
                       ) @ #vk.25 )
                  case c_Expand
                  solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                            <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                                    <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 
                                                     'g'^~y>,
                                                    '32'),
                                             <'HPKE_v1', 'secret', 'blank'>),
                                     <'32', 'HPKE_v1', 'exp', '0x00', 
                                      Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                      Extract('blank',
                                              <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                               ~key_id, $kem_id, $kdf_id, $aead_id>)
                                     >,
                                     '32')
                         ) @ #vk.28 )
                    case c_Expand
                    solve( !KU( Extract(Expand(Extract('blank',
                                                       <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y>,
                                               '32'),
                                        <'HPKE_v1', 'secret', 'blank'>)
                           ) @ #vk.36 )
                      case c_Extract
                      solve( !KU( Expand(Extract('blank',
                                                 <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                         <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y>, '32')
                             ) @ #vk.45 )
                        case c_Expand
                        solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>)
                               ) @ #vk.52 )
                          case c_Extract
                          solve( !KU( 'g'^(~x*~y) ) @ #vk.59 )
                            case C_QueryGeneration
                            by solve( !KU( ~y ) @ #vk.60 )
                          next
                            case Generate_DH_key_pair
                            by solve( !KU( ~x ) @ #vk.60 )
                          next
                            case c_exp
                            by solve( !KU( ~x ) @ #vk.62 )
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case c_seal
        by contradiction /* cyclic */
      qed
    next
      case P_HandleQuery
      solve( !KU( seal(Expand(Extract(<'g'^~x, ~resp_nonce>,
                                      Expand(Expand(Extract(Expand(Extract('blank',
                                                                           <'HPKE_v1', 'eae_prk', 
                                                                            'g'^(~x*~y)>),
                                                                   <'32', 'HPKE_v1', 
                                                                    'shared_secret', 'g'^~x, 'g'^~y
                                                                   >,
                                                                   '32'),
                                                            <'HPKE_v1', 'secret', 'blank'>),
                                                    <'32', 'HPKE_v1', 'exp', '0x00', 
                                                     Extract('blank',
                                                             <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                     Extract('blank',
                                                             <'HPKE_v1', 'info_hash', 
                                                              'message_ohttp_req', '0x00', ~key_id, 
                                                              $kem_id, $kdf_id, $aead_id>)
                                                    >,
                                                    '32'),
                                             <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                              'key', '32'),
                       Expand(Extract(<'g'^~x, ~resp_nonce>,
                                      Expand(Expand(Extract(Expand(Extract('blank',
                                                                           <'HPKE_v1', 'eae_prk', 
                                                                            'g'^(~x*~y)>),
                                                                   <'32', 'HPKE_v1', 
                                                                    'shared_secret', 'g'^~x, 'g'^~y
                                                                   >,
                                                                   '32'),
                                                            <'HPKE_v1', 'secret', 'blank'>),
                                                    <'32', 'HPKE_v1', 'exp', '0x00', 
                                                     Extract('blank',
                                                             <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                     Extract('blank',
                                                             <'HPKE_v1', 'info_hash', 
                                                              'message_ohttp_req', '0x00', ~key_id, 
                                                              $kem_id, $kdf_id, $aead_id>)
                                                    >,
                                                    '32'),
                                             <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                              'nonce', '32'),
                       'blank', ~resp)
             ) @ #vk.13 )
        case T_HandleQuery
        solve( !KU( seal(Expand(Extract(<'g'^~x, ~resp_nonce>,
                                        Expand(Expand(Extract(Expand(Extract('blank',
                                                                             <'HPKE_v1', 'eae_prk', 
                                                                              'g'^(~x*~y)>),
                                                                     <'32', 'HPKE_v1', 
                                                                      'shared_secret', 'g'^~x, 
                                                                      'g'^~y>,
                                                                     '32'),
                                                              <'HPKE_v1', 'secret', 'blank'>),
                                                      <'32', 'HPKE_v1', 'exp', '0x00', 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'psk_id_hash', 'blank'
                                                               >), 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'info_hash', 
                                                                'message_ohttp_req', '0x00', 
                                                                ~key_id, $kem_id, $kdf_id, $aead_id
                                                               >)
                                                      >,
                                                      '32'),
                                               <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                               '32')),
                                'key', '32'),
                         Expand(Extract(<'g'^~x, ~resp_nonce>,
                                        Expand(Expand(Extract(Expand(Extract('blank',
                                                                             <'HPKE_v1', 'eae_prk', 
                                                                              'g'^(~x*~y)>),
                                                                     <'32', 'HPKE_v1', 
                                                                      'shared_secret', 'g'^~x, 
                                                                      'g'^~y>,
                                                                     '32'),
                                                              <'HPKE_v1', 'secret', 'blank'>),
                                                      <'32', 'HPKE_v1', 'exp', '0x00', 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'psk_id_hash', 'blank'
                                                               >), 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'info_hash', 
                                                                'message_ohttp_req', '0x00', 
                                                                ~key_id, $kem_id, $kdf_id, $aead_id
                                                               >)
                                                      >,
                                                      '32'),
                                               <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                               '32')),
                                'nonce', '32'),
                         a2, p2)
               ) @ #vk.14 )
          case T_HandleQuery
          by contradiction /* from formulas */
        next
          case c_seal
          solve( !KU( Expand(Extract(<'g'^~x, ~resp_nonce>,
                                     Expand(Expand(Extract(Expand(Extract('blank',
                                                                          <'HPKE_v1', 'eae_prk', 
                                                                           'g'^(~x*~y)>),
                                                                  <'32', 'HPKE_v1', 
                                                                   'shared_secret', 'g'^~x, 'g'^~y>,
                                                                  '32'),
                                                           <'HPKE_v1', 'secret', 'blank'>),
                                                   <'32', 'HPKE_v1', 'exp', '0x00', 
                                                    Extract('blank',
                                                            <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                    Extract('blank',
                                                            <'HPKE_v1', 'info_hash', 
                                                             'message_ohttp_req', '0x00', ~key_id, 
                                                             $kem_id, $kdf_id, $aead_id>)
                                                   >,
                                                   '32'),
                                            <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                             'key', '32')
                 ) @ #vk.16 )
            case c_Expand
            solve( !KU( Expand(Extract(<'g'^~x, ~resp_nonce>,
                                       Expand(Expand(Extract(Expand(Extract('blank',
                                                                            <'HPKE_v1', 'eae_prk', 
                                                                             'g'^(~x*~y)>),
                                                                    <'32', 'HPKE_v1', 
                                                                     'shared_secret', 'g'^~x, 'g'^~y
                                                                    >,
                                                                    '32'),
                                                             <'HPKE_v1', 'secret', 'blank'>),
                                                     <'32', 'HPKE_v1', 'exp', '0x00', 
                                                      Extract('blank',
                                                              <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                      Extract('blank',
                                                              <'HPKE_v1', 'info_hash', 
                                                               'message_ohttp_req', '0x00', 
                                                               ~key_id, $kem_id, $kdf_id, $aead_id>)
                                                     >,
                                                     '32'),
                                              <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                               'nonce', '32')
                   ) @ #vk.17 )
              case c_Expand
              solve( !KU( Extract(<'g'^~x, ~resp_nonce>,
                                  Expand(Expand(Extract(Expand(Extract('blank',
                                                                       <'HPKE_v1', 'eae_prk', 
                                                                        'g'^(~x*~y)>),
                                                               <'32', 'HPKE_v1', 'shared_secret', 
                                                                'g'^~x, 'g'^~y>,
                                                               '32'),
                                                        <'HPKE_v1', 'secret', 'blank'>),
                                                <'32', 'HPKE_v1', 'exp', '0x00', 
                                                 Extract('blank',
                                                         <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                 Extract('blank',
                                                         <'HPKE_v1', 'info_hash', 
                                                          'message_ohttp_req', '0x00', ~key_id, 
                                                          $kem_id, $kdf_id, $aead_id>)
                                                >,
                                                '32'),
                                         <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32'))
                     ) @ #vk.20 )
                case c_Extract
                solve( !KU( Expand(Expand(Extract(Expand(Extract('blank',
                                                                 <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)
                                                                 >),
                                                         <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 
                                                          'g'^~y>,
                                                         '32'),
                                                  <'HPKE_v1', 'secret', 'blank'>),
                                          <'32', 'HPKE_v1', 'exp', '0x00', 
                                           Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                           Extract('blank',
                                                   <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                    '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>)
                                          >,
                                          '32'),
                                   <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')
                       ) @ #vk.25 )
                  case c_Expand
                  solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                            <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                                    <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 
                                                     'g'^~y>,
                                                    '32'),
                                             <'HPKE_v1', 'secret', 'blank'>),
                                     <'32', 'HPKE_v1', 'exp', '0x00', 
                                      Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                      Extract('blank',
                                              <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                               ~key_id, $kem_id, $kdf_id, $aead_id>)
                                     >,
                                     '32')
                         ) @ #vk.28 )
                    case c_Expand
                    solve( !KU( Extract(Expand(Extract('blank',
                                                       <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y>,
                                               '32'),
                                        <'HPKE_v1', 'secret', 'blank'>)
                           ) @ #vk.36 )
                      case c_Extract
                      solve( !KU( Expand(Extract('blank',
                                                 <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                         <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y>, '32')
                             ) @ #vk.45 )
                        case c_Expand
                        solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>)
                               ) @ #vk.52 )
                          case c_Extract
                          solve( !KU( 'g'^(~x*~y) ) @ #vk.59 )
                            case Generate_DH_key_pair
                            by solve( !KU( ~x ) @ #vk.60 )
                          next
                            case P_HandleQuery
                            by solve( !KU( ~y ) @ #vk.60 )
                          next
                            case c_exp
                            by solve( !KU( ~x ) @ #vk.62 )
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case c_seal
        by contradiction /* cyclic */
      qed
    next
      case c_seal
      by contradiction /* from formulas */
    qed
  next
    case T_HandleQuery
    solve( !KU( ~resp_nonce ) @ #vk.35 )
      case T_HandleQuery
      solve( !KU( Extract('blank',
                          <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                           $kem_id, $kdf_id, $aead_id>)
             ) @ #vk.48 )
        case c_Extract
        solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', z>)
               ) @ #vk.53 )
          case c_Extract
          solve( !KU( seal(Expand(Extract(Expand(Extract('blank',
                                                         <'HPKE_v1', 'eae_prk', z>),
                                                 <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>,
                                                 '32'),
                                          <'HPKE_v1', 'secret', 'blank'>),
                                  <'32', 'HPKE_v1', 'key', '0x00', 
                                   Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                   Extract('blank',
                                           <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                            ~key_id, $kem_id, $kdf_id, $aead_id>)
                                  >,
                                  '32'),
                           Expand(Extract(Expand(Extract('blank', <'HPKE_v1', 'eae_prk', z>),
                                                 <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>,
                                                 '32'),
                                          <'HPKE_v1', 'secret', 'blank'>),
                                  <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                                   Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                   Extract('blank',
                                           <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                            ~key_id, $kem_id, $kdf_id, $aead_id>)
                                  >,
                                  '32'),
                           <'message_ohttp_req', '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>,
                           req)
                 ) @ #vk.33 )
            case C_QueryGeneration
            solve( !KU( 'g'^(~x*~y) ) @ #vk.63 )
              case C_QueryGeneration
              by solve( !KU( ~y ) @ #vk.65 )
            next
              case Generate_DH_key_pair
              by solve( !KU( ~x ) @ #vk.65 )
            next
              case c_exp
              by solve( !KU( ~x ) @ #vk.67 )
            qed
          next
            case P_HandleQuery
            solve( !KU( 'g'^(~x*~y) ) @ #vk.63 )
              case Generate_DH_key_pair
              by solve( !KU( ~x ) @ #vk.65 )
            next
              case P_HandleQuery
              by solve( !KU( ~y ) @ #vk.65 )
            next
              case c_exp
              by solve( !KU( ~x ) @ #vk.67 )
            qed
          next
            case c_seal
            by contradiction /* from formulas */
          qed
        qed
      qed
    qed
  qed
qed

lemma secret_cid [reuse]:
  all-traces
  "∀ C gx P key T gy cid req #j #k.
    ((C_QG( C, gx, P, key, T, gy, cid, req ) @ #j) ∧
     (!KU( cid ) @ #k)) ⇒
    (∃ #i. (RevSk( key ) @ #i) ∧ (#i < #k))"
/*
guarded formula characterizing all counter-examples:
"∃ C gx P key T gy cid req #j #k.
  (C_QG( C, gx, P, key, T, gy, cid, req ) @ #j) ∧ (!KU( cid ) @ #k)
 ∧
  ∀ #i. (RevSk( key ) @ #i) ⇒ ¬(#i < #k)"
*/
simplify
solve( KeyExC( $C, $P, ~k ) ▶₀ #j )
  case Starter
  solve( !Pk( $T, <~key_id, kem_id, kdf_id, aead_id>, gy ) ▶₁ #j )
    case Generate_DH_key_pair
    solve( !KU( ~cid ) @ #k.1 )
      case C_QueryGeneration
      solve( !KU( ~k ) @ #vk )
        case RevSK
        by contradiction /* from formulas */
      qed
    qed
  qed
qed

lemma request_binding:
  all-traces
  "∀ C gx P key T gy cid req #j #k #l.
    (((C_QG( C, gx, P, key, T, gy, cid, req ) @ #j) ∧
      (!KU( req ) @ #k)) ∧
     (!KU( cid ) @ #l)) ⇒
    (∃ sig_algs #h #i.
      (((RevDH( T, sig_algs, gy ) @ #h) ∧ (#h < #k)) ∧
       (RevSk( key ) @ #i)) ∧
      (#i < #l))"
/*
guarded formula characterizing all counter-examples:
"∃ C gx P key T gy cid req #j #k #l.
  (C_QG( C, gx, P, key, T, gy, cid, req ) @ #j) ∧
  (!KU( req ) @ #k) ∧
  (!KU( cid ) @ #l)
 ∧
  ∀ sig_algs #h #i.
   (RevDH( T, sig_algs, gy ) @ #h) ∧ (RevSk( key ) @ #i)
  ⇒
   ((¬(#h < #k)) ∨ (¬(#i < #l)))"
*/
simplify
by contradiction /* from formulas */

lemma consistency:
  all-traces
  "∀ req resp C gx T gy #j.
    (C_Done( req, resp, C, gx, T, gy ) @ #j) ⇒
    ((∃ tid #i.
       (T_Answer( tid, T, gx, gy, req, resp ) @ #i) ∧ (#i < #j)) ∨
     (∃ sig_algs #i. (RevDH( T, sig_algs, gy ) @ #i) ∧ (#i < #j)))"
/*
guarded formula characterizing all counter-examples:
"∃ req resp C gx T gy #j.
  (C_Done( req, resp, C, gx, T, gy ) @ #j)
 ∧
  (∀ tid #i.
    (T_Answer( tid, T, gx, gy, req, resp ) @ #i) ⇒ ¬(#i < #j)) ∧
  (∀ sig_algs #i. (RevDH( T, sig_algs, gy ) @ #i) ⇒ ¬(#i < #j))"
*/
simplify
solve( C_ResponseHandler( ~request, $C, gx, $P, ~k, $T, gy,
                          shared_secret,
                          <'message_ohttp_req', '0x00', key_id, kem_id, kdf_id, aead_id>
       ) ▶₀ #j )
  case C_QueryGeneration
  solve( !KU( senc(<response_nonce, 
                    seal(Expand(Extract(<'g'^~x, response_nonce>,
                                        Expand(Expand(Extract(Expand(Extract('blank',
                                                                             <'HPKE_v1', 'eae_prk', 
                                                                              'g'^(~x*~x.1)>),
                                                                     <'32', 'HPKE_v1', 
                                                                      'shared_secret', 'g'^~x, 
                                                                      'g'^~x.1>,
                                                                     '32'),
                                                              <'HPKE_v1', 'secret', 'blank'>),
                                                      <'32', 'HPKE_v1', 'exp', '0x00', 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'psk_id_hash', 'blank'
                                                               >), 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'info_hash', 
                                                                'message_ohttp_req', '0x00', 
                                                                ~key_id, $kem_id, $kdf_id, $aead_id
                                                               >)
                                                      >,
                                                      '32'),
                                               <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                               '32')),
                                'key', '32'),
                         Expand(Extract(<'g'^~x, response_nonce>,
                                        Expand(Expand(Extract(Expand(Extract('blank',
                                                                             <'HPKE_v1', 'eae_prk', 
                                                                              'g'^(~x*~x.1)>),
                                                                     <'32', 'HPKE_v1', 
                                                                      'shared_secret', 'g'^~x, 
                                                                      'g'^~x.1>,
                                                                     '32'),
                                                              <'HPKE_v1', 'secret', 'blank'>),
                                                      <'32', 'HPKE_v1', 'exp', '0x00', 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'psk_id_hash', 'blank'
                                                               >), 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'info_hash', 
                                                                'message_ohttp_req', '0x00', 
                                                                ~key_id, $kem_id, $kdf_id, $aead_id
                                                               >)
                                                      >,
                                                      '32'),
                                               <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                               '32')),
                                'nonce', '32'),
                         'blank', resp)
                   >,
                   ~k)
         ) @ #vk )
    case P_HandleResponse
    solve( !KU( seal(Expand(Extract(<'g'^~x, response_nonce>,
                                    Expand(Expand(Extract(Expand(Extract('blank',
                                                                         <'HPKE_v1', 'eae_prk', 
                                                                          'g'^(~x*~x.1)>),
                                                                 <'32', 'HPKE_v1', 'shared_secret', 
                                                                  'g'^~x, 'g'^~x.1>,
                                                                 '32'),
                                                          <'HPKE_v1', 'secret', 'blank'>),
                                                  <'32', 'HPKE_v1', 'exp', '0x00', 
                                                   Extract('blank',
                                                           <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                   Extract('blank',
                                                           <'HPKE_v1', 'info_hash', 
                                                            'message_ohttp_req', '0x00', ~key_id, 
                                                            $kem_id, $kdf_id, $aead_id>)
                                                  >,
                                                  '32'),
                                           <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                            'key', '32'),
                     Expand(Extract(<'g'^~x, response_nonce>,
                                    Expand(Expand(Extract(Expand(Extract('blank',
                                                                         <'HPKE_v1', 'eae_prk', 
                                                                          'g'^(~x*~x.1)>),
                                                                 <'32', 'HPKE_v1', 'shared_secret', 
                                                                  'g'^~x, 'g'^~x.1>,
                                                                 '32'),
                                                          <'HPKE_v1', 'secret', 'blank'>),
                                                  <'32', 'HPKE_v1', 'exp', '0x00', 
                                                   Extract('blank',
                                                           <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                   Extract('blank',
                                                           <'HPKE_v1', 'info_hash', 
                                                            'message_ohttp_req', '0x00', ~key_id, 
                                                            $kem_id, $kdf_id, $aead_id>)
                                                  >,
                                                  '32'),
                                           <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                            'nonce', '32'),
                     'blank', resp)
           ) @ #vk.3 )
      case T_HandleQuery
      solve( !KU( senc(<cid.1, 
                        <~key_id.1, $kem_id.1, $kdf_id.1, $aead_id.1>, gx, opaque>,
                       ~k)
             ) @ #vk.4 )
        case C_QueryGeneration
        solve( !KU( seal(Expand(Extract(Expand(Extract('blank',
                                                       <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                               '32'),
                                        <'HPKE_v1', 'secret', 'blank'>),
                                <'32', 'HPKE_v1', 'key', '0x00', 
                                 Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                 Extract('blank',
                                         <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                          ~key_id, $kem_id, $kdf_id, $aead_id>)
                                >,
                                '32'),
                         Expand(Extract(Expand(Extract('blank',
                                                       <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                               '32'),
                                        <'HPKE_v1', 'secret', 'blank'>),
                                <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                                 Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                 Extract('blank',
                                         <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                          ~key_id, $kem_id, $kdf_id, $aead_id>)
                                >,
                                '32'),
                         <'message_ohttp_req', '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>,
                         request.1)
               ) @ #vk.17 )
          case C_QueryGeneration
          by contradiction /* from formulas */
        next
          case P_HandleQuery
          by contradiction /* from formulas */
        next
          case c_seal
          solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                    <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                            <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                            '32'),
                                     <'HPKE_v1', 'secret', 'blank'>),
                             <'32', 'HPKE_v1', 'key', '0x00', 
                              Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                              Extract('blank',
                                      <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                       ~key_id, $kem_id, $kdf_id, $aead_id>)
                             >,
                             '32')
                 ) @ #vk.19 )
            case c_Expand
            solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                      <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                              <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                              '32'),
                                       <'HPKE_v1', 'secret', 'blank'>),
                               <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                                Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                Extract('blank',
                                        <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                         ~key_id, $kem_id, $kdf_id, $aead_id>)
                               >,
                               '32')
                   ) @ #vk.21 )
              case c_Expand
              solve( !KU( Extract(Expand(Extract('blank',
                                                 <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                         <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                         '32'),
                                  <'HPKE_v1', 'secret', 'blank'>)
                     ) @ #vk.28 )
                case c_Extract
                solve( !KU( Expand(Extract('blank',
                                           <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                   <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>, '32')
                       ) @ #vk.41 )
                  case c_Expand
                  solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>)
                         ) @ #vk.48 )
                    case c_Extract
                    solve( !KU( 'g'^(~x*~x.1) ) @ #vk.55 )
                      case C_QueryGeneration
                      by solve( !KU( ~x.1 ) @ #vk.57 )
                    next
                      case Generate_DH_key_pair
                      by solve( !KU( ~x ) @ #vk.56 )
                    next
                      case P_HandleQuery
                      by solve( !KU( ~x.1 ) @ #vk.56 )
                    next
                      case c_exp
                      by solve( !KU( ~x ) @ #vk.58 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case c_senc
        solve( !KU( seal(Expand(Extract(Expand(Extract('blank',
                                                       <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                               '32'),
                                        <'HPKE_v1', 'secret', 'blank'>),
                                <'32', 'HPKE_v1', 'key', '0x00', 
                                 Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                 Extract('blank',
                                         <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                          ~key_id, $kem_id, $kdf_id, $aead_id>)
                                >,
                                '32'),
                         Expand(Extract(Expand(Extract('blank',
                                                       <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                               '32'),
                                        <'HPKE_v1', 'secret', 'blank'>),
                                <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                                 Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                 Extract('blank',
                                         <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                          ~key_id, $kem_id, $kdf_id, $aead_id>)
                                >,
                                '32'),
                         <'message_ohttp_req', '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>,
                         request.1)
               ) @ #vk.17 )
          case C_QueryGeneration
          by contradiction /* from formulas */
        next
          case P_HandleQuery
          by contradiction /* cyclic */
        next
          case c_seal
          solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                    <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                            <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                            '32'),
                                     <'HPKE_v1', 'secret', 'blank'>),
                             <'32', 'HPKE_v1', 'key', '0x00', 
                              Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                              Extract('blank',
                                      <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                       ~key_id, $kem_id, $kdf_id, $aead_id>)
                             >,
                             '32')
                 ) @ #vk.33 )
            case c_Expand
            solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                      <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                              <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                              '32'),
                                       <'HPKE_v1', 'secret', 'blank'>),
                               <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                                Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                Extract('blank',
                                        <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                         ~key_id, $kem_id, $kdf_id, $aead_id>)
                               >,
                               '32')
                   ) @ #vk.35 )
              case c_Expand
              solve( !KU( Extract(Expand(Extract('blank',
                                                 <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                         <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                         '32'),
                                  <'HPKE_v1', 'secret', 'blank'>)
                     ) @ #vk.42 )
                case c_Extract
                solve( !KU( Expand(Extract('blank',
                                           <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                   <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>, '32')
                       ) @ #vk.55 )
                  case c_Expand
                  solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>)
                         ) @ #vk.62 )
                    case c_Extract
                    solve( !KU( 'g'^(~x*~x.1) ) @ #vk.69 )
                      case C_QueryGeneration
                      by solve( !KU( ~x.1 ) @ #vk.70 )
                    next
                      case Generate_DH_key_pair
                      by solve( !KU( ~x ) @ #vk.70 )
                    next
                      case P_HandleQuery
                      by contradiction /* cyclic */
                    next
                      case c_exp
                      by solve( !KU( ~x ) @ #vk.72 )
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case c_seal
      solve( !KU( Expand(Extract(<'g'^~x, response_nonce>,
                                 Expand(Expand(Extract(Expand(Extract('blank',
                                                                      <'HPKE_v1', 'eae_prk', 
                                                                       'g'^(~x*~x.1)>),
                                                              <'32', 'HPKE_v1', 'shared_secret', 
                                                               'g'^~x, 'g'^~x.1>,
                                                              '32'),
                                                       <'HPKE_v1', 'secret', 'blank'>),
                                               <'32', 'HPKE_v1', 'exp', '0x00', 
                                                Extract('blank',
                                                        <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                Extract('blank',
                                                        <'HPKE_v1', 'info_hash', 
                                                         'message_ohttp_req', '0x00', ~key_id, 
                                                         $kem_id, $kdf_id, $aead_id>)
                                               >,
                                               '32'),
                                        <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                         'key', '32')
             ) @ #vk.5 )
        case c_Expand
        solve( !KU( Expand(Extract(<'g'^~x, response_nonce>,
                                   Expand(Expand(Extract(Expand(Extract('blank',
                                                                        <'HPKE_v1', 'eae_prk', 
                                                                         'g'^(~x*~x.1)>),
                                                                <'32', 'HPKE_v1', 'shared_secret', 
                                                                 'g'^~x, 'g'^~x.1>,
                                                                '32'),
                                                         <'HPKE_v1', 'secret', 'blank'>),
                                                 <'32', 'HPKE_v1', 'exp', '0x00', 
                                                  Extract('blank',
                                                          <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                  Extract('blank',
                                                          <'HPKE_v1', 'info_hash', 
                                                           'message_ohttp_req', '0x00', ~key_id, 
                                                           $kem_id, $kdf_id, $aead_id>)
                                                 >,
                                                 '32'),
                                          <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                           'nonce', '32')
               ) @ #vk.6 )
          case c_Expand
          solve( !KU( Extract(<'g'^~x, response_nonce>,
                              Expand(Expand(Extract(Expand(Extract('blank',
                                                                   <'HPKE_v1', 'eae_prk', 
                                                                    'g'^(~x*~x.1)>),
                                                           <'32', 'HPKE_v1', 'shared_secret', 
                                                            'g'^~x, 'g'^~x.1>,
                                                           '32'),
                                                    <'HPKE_v1', 'secret', 'blank'>),
                                            <'32', 'HPKE_v1', 'exp', '0x00', 
                                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                             Extract('blank',
                                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                      '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>)
                                            >,
                                            '32'),
                                     <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32'))
                 ) @ #vk.9 )
            case c_Extract
            solve( !KU( Expand(Expand(Extract(Expand(Extract('blank',
                                                             <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                                     <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 
                                                      'g'^~x.1>,
                                                     '32'),
                                              <'HPKE_v1', 'secret', 'blank'>),
                                      <'32', 'HPKE_v1', 'exp', '0x00', 
                                       Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                       Extract('blank',
                                               <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>)
                                      >,
                                      '32'),
                               <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')
                   ) @ #vk.14 )
              case c_Expand
              solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                        <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                                <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1
                                                >,
                                                '32'),
                                         <'HPKE_v1', 'secret', 'blank'>),
                                 <'32', 'HPKE_v1', 'exp', '0x00', 
                                  Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                  Extract('blank',
                                          <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                           ~key_id, $kem_id, $kdf_id, $aead_id>)
                                 >,
                                 '32')
                     ) @ #vk.17 )
                case c_Expand
                solve( !KU( Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                           <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                           '32'),
                                    <'HPKE_v1', 'secret', 'blank'>)
                       ) @ #vk.25 )
                  case c_Extract
                  solve( !KU( Extract('blank',
                                      <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                       ~key_id, $kem_id, $kdf_id, $aead_id>)
                         ) @ #vk.34 )
                    case c_Extract
                    solve( !KU( Expand(Extract('blank',
                                               <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                       <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>, '32')
                           ) @ #vk.37 )
                      case c_Expand
                      solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>)
                             ) @ #vk.53 )
                        case c_Extract
                        solve( !KU( 'g'^(~x*~x.1) ) @ #vk.60 )
                          case C_QueryGeneration
                          by solve( !KU( ~x.1 ) @ #vk.62 )
                        next
                          case Generate_DH_key_pair
                          by solve( !KU( ~x ) @ #vk.61 )
                        next
                          case P_HandleQuery
                          by solve( !KU( ~x.1 ) @ #vk.61 )
                        next
                          case c_exp
                          by solve( !KU( ~x ) @ #vk.63 )
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  next
    case c_senc
    solve( !KU( seal(Expand(Extract(<'g'^~x, response_nonce>,
                                    Expand(Expand(Extract(Expand(Extract('blank',
                                                                         <'HPKE_v1', 'eae_prk', 
                                                                          'g'^(~x*~x.1)>),
                                                                 <'32', 'HPKE_v1', 'shared_secret', 
                                                                  'g'^~x, 'g'^~x.1>,
                                                                 '32'),
                                                          <'HPKE_v1', 'secret', 'blank'>),
                                                  <'32', 'HPKE_v1', 'exp', '0x00', 
                                                   Extract('blank',
                                                           <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                   Extract('blank',
                                                           <'HPKE_v1', 'info_hash', 
                                                            'message_ohttp_req', '0x00', ~key_id, 
                                                            $kem_id, $kdf_id, $aead_id>)
                                                  >,
                                                  '32'),
                                           <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                            'key', '32'),
                     Expand(Extract(<'g'^~x, response_nonce>,
                                    Expand(Expand(Extract(Expand(Extract('blank',
                                                                         <'HPKE_v1', 'eae_prk', 
                                                                          'g'^(~x*~x.1)>),
                                                                 <'32', 'HPKE_v1', 'shared_secret', 
                                                                  'g'^~x, 'g'^~x.1>,
                                                                 '32'),
                                                          <'HPKE_v1', 'secret', 'blank'>),
                                                  <'32', 'HPKE_v1', 'exp', '0x00', 
                                                   Extract('blank',
                                                           <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                   Extract('blank',
                                                           <'HPKE_v1', 'info_hash', 
                                                            'message_ohttp_req', '0x00', ~key_id, 
                                                            $kem_id, $kdf_id, $aead_id>)
                                                  >,
                                                  '32'),
                                           <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                            'nonce', '32'),
                     'blank', resp)
           ) @ #vk.4 )
      case T_HandleQuery
      solve( !KU( seal(Expand(Extract(Expand(Extract('blank',
                                                     <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                             <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                             '32'),
                                      <'HPKE_v1', 'secret', 'blank'>),
                              <'32', 'HPKE_v1', 'key', '0x00', 
                               Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                               Extract('blank',
                                       <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                        ~key_id, $kem_id, $kdf_id, $aead_id>)
                              >,
                              '32'),
                       Expand(Extract(Expand(Extract('blank',
                                                     <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                             <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                             '32'),
                                      <'HPKE_v1', 'secret', 'blank'>),
                              <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                               Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                               Extract('blank',
                                       <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                        ~key_id, $kem_id, $kdf_id, $aead_id>)
                              >,
                              '32'),
                       <'message_ohttp_req', '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>,
                       request.1)
             ) @ #vk.17 )
        case C_QueryGeneration
        by contradiction /* from formulas */
      next
        case P_HandleQuery
        by contradiction /* from formulas */
      next
        case c_seal
        solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                  <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                          <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                          '32'),
                                   <'HPKE_v1', 'secret', 'blank'>),
                           <'32', 'HPKE_v1', 'key', '0x00', 
                            Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                            Extract('blank',
                                    <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                     $kem_id, $kdf_id, $aead_id>)
                           >,
                           '32')
               ) @ #vk.19 )
          case c_Expand
          solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                    <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                            <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                            '32'),
                                     <'HPKE_v1', 'secret', 'blank'>),
                             <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                              Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                              Extract('blank',
                                      <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                       ~key_id, $kem_id, $kdf_id, $aead_id>)
                             >,
                             '32')
                 ) @ #vk.21 )
            case c_Expand
            solve( !KU( Extract(Expand(Extract('blank',
                                               <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                       <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>, '32'),
                                <'HPKE_v1', 'secret', 'blank'>)
                   ) @ #vk.28 )
              case c_Extract
              solve( !KU( Expand(Extract('blank',
                                         <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                 <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>, '32')
                     ) @ #vk.41 )
                case c_Expand
                solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>)
                       ) @ #vk.48 )
                  case c_Extract
                  solve( !KU( 'g'^(~x*~x.1) ) @ #vk.55 )
                    case C_QueryGeneration
                    by solve( !KU( ~x.1 ) @ #vk.56 )
                  next
                    case Generate_DH_key_pair
                    by solve( !KU( ~x ) @ #vk.56 )
                  next
                    case P_HandleQuery
                    by solve( !KU( ~x.1 ) @ #vk.57 )
                  next
                    case c_exp
                    by solve( !KU( ~x ) @ #vk.58 )
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case c_seal
      solve( !KU( Expand(Extract(<'g'^~x, response_nonce>,
                                 Expand(Expand(Extract(Expand(Extract('blank',
                                                                      <'HPKE_v1', 'eae_prk', 
                                                                       'g'^(~x*~x.1)>),
                                                              <'32', 'HPKE_v1', 'shared_secret', 
                                                               'g'^~x, 'g'^~x.1>,
                                                              '32'),
                                                       <'HPKE_v1', 'secret', 'blank'>),
                                               <'32', 'HPKE_v1', 'exp', '0x00', 
                                                Extract('blank',
                                                        <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                Extract('blank',
                                                        <'HPKE_v1', 'info_hash', 
                                                         'message_ohttp_req', '0x00', ~key_id, 
                                                         $kem_id, $kdf_id, $aead_id>)
                                               >,
                                               '32'),
                                        <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                         'key', '32')
             ) @ #vk.5 )
        case c_Expand
        solve( !KU( Expand(Extract(<'g'^~x, response_nonce>,
                                   Expand(Expand(Extract(Expand(Extract('blank',
                                                                        <'HPKE_v1', 'eae_prk', 
                                                                         'g'^(~x*~x.1)>),
                                                                <'32', 'HPKE_v1', 'shared_secret', 
                                                                 'g'^~x, 'g'^~x.1>,
                                                                '32'),
                                                         <'HPKE_v1', 'secret', 'blank'>),
                                                 <'32', 'HPKE_v1', 'exp', '0x00', 
                                                  Extract('blank',
                                                          <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                  Extract('blank',
                                                          <'HPKE_v1', 'info_hash', 
                                                           'message_ohttp_req', '0x00', ~key_id, 
                                                           $kem_id, $kdf_id, $aead_id>)
                                                 >,
                                                 '32'),
                                          <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                           'nonce', '32')
               ) @ #vk.6 )
          case c_Expand
          solve( !KU( Extract(<'g'^~x, response_nonce>,
                              Expand(Expand(Extract(Expand(Extract('blank',
                                                                   <'HPKE_v1', 'eae_prk', 
                                                                    'g'^(~x*~x.1)>),
                                                           <'32', 'HPKE_v1', 'shared_secret', 
                                                            'g'^~x, 'g'^~x.1>,
                                                           '32'),
                                                    <'HPKE_v1', 'secret', 'blank'>),
                                            <'32', 'HPKE_v1', 'exp', '0x00', 
                                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                             Extract('blank',
                                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                      '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>)
                                            >,
                                            '32'),
                                     <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32'))
                 ) @ #vk.9 )
            case c_Extract
            solve( !KU( Expand(Expand(Extract(Expand(Extract('blank',
                                                             <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                                     <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 
                                                      'g'^~x.1>,
                                                     '32'),
                                              <'HPKE_v1', 'secret', 'blank'>),
                                      <'32', 'HPKE_v1', 'exp', '0x00', 
                                       Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                       Extract('blank',
                                               <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>)
                                      >,
                                      '32'),
                               <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')
                   ) @ #vk.14 )
              case c_Expand
              solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                        <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                                <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1
                                                >,
                                                '32'),
                                         <'HPKE_v1', 'secret', 'blank'>),
                                 <'32', 'HPKE_v1', 'exp', '0x00', 
                                  Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                  Extract('blank',
                                          <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                           ~key_id, $kem_id, $kdf_id, $aead_id>)
                                 >,
                                 '32')
                     ) @ #vk.17 )
                case c_Expand
                solve( !KU( Extract(Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                           <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>,
                                           '32'),
                                    <'HPKE_v1', 'secret', 'blank'>)
                       ) @ #vk.25 )
                  case c_Extract
                  solve( !KU( Expand(Extract('blank',
                                             <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>),
                                     <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~x.1>, '32')
                         ) @ #vk.35 )
                    case c_Expand
                    solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~x.1)>)
                           ) @ #vk.40 )
                      case c_Extract
                      solve( !KU( 'g'^(~x*~x.1) ) @ #vk.47 )
                        case C_QueryGeneration
                        by solve( !KU( ~x.1 ) @ #vk.48 )
                      next
                        case Generate_DH_key_pair
                        by solve( !KU( ~x ) @ #vk.48 )
                      next
                        case P_HandleQuery
                        by solve( !KU( ~x.1 ) @ #vk.49 )
                      next
                        case c_exp
                        by solve( !KU( ~x ) @ #vk.50 )
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma reach_nonce_reuse:
  all-traces
  "∀ ttid T gx gy query answer key n a #j #k.
    ((T_Answer( ttid, T, gx, gy, query, answer ) @ #j) ∧
     (ReuseNonce( key, n, a, answer ) @ #k)) ⇒
    ((∃ kid #i. (RevDH( T, kid, gy ) @ #i) ∧ (#i < #k)) ∨
     (∃ #i. (!KU( query ) @ #i) ∧ (#i < #k)))"
/*
guarded formula characterizing all counter-examples:
"∃ ttid T gx gy query answer key n a #j #k.
  (T_Answer( ttid, T, gx, gy, query, answer ) @ #j) ∧
  (ReuseNonce( key, n, a, answer ) @ #k)
 ∧
  (∀ kid #i. (RevDH( T, kid, gy ) @ #i) ⇒ ¬(#i < #k)) ∧
  (∀ #i. (!KU( query ) @ #i) ⇒ ¬(#i < #k))"
*/
simplify
solve( !Ltk( $T, <~key_id, kem_id, kdf_id, aead_id>, ~y ) ▶₁ #j )
  case Generate_DH_key_pair
  solve( !KU( seal(Expand(Extract(Expand(Extract('blank',
                                                 <'HPKE_v1', 'eae_prk', z>),
                                         <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>, '32'),
                                  <'HPKE_v1', 'secret', 'blank'>),
                          <'32', 'HPKE_v1', 'key', '0x00', 
                           Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                           Extract('blank',
                                   <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                    $kem_id, $kdf_id, $aead_id>)
                          >,
                          '32'),
                   Expand(Extract(Expand(Extract('blank', <'HPKE_v1', 'eae_prk', z>),
                                         <'32', 'HPKE_v1', 'shared_secret', gx, 'g'^~y>, '32'),
                                  <'HPKE_v1', 'secret', 'blank'>),
                          <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                           Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                           Extract('blank',
                                   <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', ~key_id, 
                                    $kem_id, $kdf_id, $aead_id>)
                          >,
                          '32'),
                   <'message_ohttp_req', '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>,
                   query)
         ) @ #vk.12 )
    case C_QueryGeneration
    solve( !KU( seal(key, n, a2, ~resp) ) @ #vk.14 )
      case T_HandleQuery
      solve( !KU( seal(Expand(Extract(<'g'^~x, ~resp_nonce>,
                                      Expand(Expand(Extract(Expand(Extract('blank',
                                                                           <'HPKE_v1', 'eae_prk', 
                                                                            'g'^(~x*~y)>),
                                                                   <'32', 'HPKE_v1', 
                                                                    'shared_secret', 'g'^~x, 'g'^~y
                                                                   >,
                                                                   '32'),
                                                            <'HPKE_v1', 'secret', 'blank'>),
                                                    <'32', 'HPKE_v1', 'exp', '0x00', 
                                                     Extract('blank',
                                                             <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                     Extract('blank',
                                                             <'HPKE_v1', 'info_hash', 
                                                              'message_ohttp_req', '0x00', ~key_id, 
                                                              $kem_id, $kdf_id, $aead_id>)
                                                    >,
                                                    '32'),
                                             <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                              'key', '32'),
                       Expand(Extract(<'g'^~x, ~resp_nonce>,
                                      Expand(Expand(Extract(Expand(Extract('blank',
                                                                           <'HPKE_v1', 'eae_prk', 
                                                                            'g'^(~x*~y)>),
                                                                   <'32', 'HPKE_v1', 
                                                                    'shared_secret', 'g'^~x, 'g'^~y
                                                                   >,
                                                                   '32'),
                                                            <'HPKE_v1', 'secret', 'blank'>),
                                                    <'32', 'HPKE_v1', 'exp', '0x00', 
                                                     Extract('blank',
                                                             <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                     Extract('blank',
                                                             <'HPKE_v1', 'info_hash', 
                                                              'message_ohttp_req', '0x00', ~key_id, 
                                                              $kem_id, $kdf_id, $aead_id>)
                                                    >,
                                                    '32'),
                                             <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                              'nonce', '32'),
                       a1, a)
             ) @ #vk.14 )
        case T_HandleQuery
        by contradiction /* from formulas */
      next
        case c_seal
        solve( !KU( Expand(Extract(<'g'^~x, ~resp_nonce>,
                                   Expand(Expand(Extract(Expand(Extract('blank',
                                                                        <'HPKE_v1', 'eae_prk', 
                                                                         'g'^(~x*~y)>),
                                                                <'32', 'HPKE_v1', 'shared_secret', 
                                                                 'g'^~x, 'g'^~y>,
                                                                '32'),
                                                         <'HPKE_v1', 'secret', 'blank'>),
                                                 <'32', 'HPKE_v1', 'exp', '0x00', 
                                                  Extract('blank',
                                                          <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                  Extract('blank',
                                                          <'HPKE_v1', 'info_hash', 
                                                           'message_ohttp_req', '0x00', ~key_id, 
                                                           $kem_id, $kdf_id, $aead_id>)
                                                 >,
                                                 '32'),
                                          <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                           'key', '32')
               ) @ #vk.16 )
          case c_Expand
          solve( !KU( Expand(Extract(<'g'^~x, ~resp_nonce>,
                                     Expand(Expand(Extract(Expand(Extract('blank',
                                                                          <'HPKE_v1', 'eae_prk', 
                                                                           'g'^(~x*~y)>),
                                                                  <'32', 'HPKE_v1', 
                                                                   'shared_secret', 'g'^~x, 'g'^~y>,
                                                                  '32'),
                                                           <'HPKE_v1', 'secret', 'blank'>),
                                                   <'32', 'HPKE_v1', 'exp', '0x00', 
                                                    Extract('blank',
                                                            <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                    Extract('blank',
                                                            <'HPKE_v1', 'info_hash', 
                                                             'message_ohttp_req', '0x00', ~key_id, 
                                                             $kem_id, $kdf_id, $aead_id>)
                                                   >,
                                                   '32'),
                                            <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                             'nonce', '32')
                 ) @ #vk.17 )
            case c_Expand
            solve( !KU( Extract(<'g'^~x, ~resp_nonce>,
                                Expand(Expand(Extract(Expand(Extract('blank',
                                                                     <'HPKE_v1', 'eae_prk', 
                                                                      'g'^(~x*~y)>),
                                                             <'32', 'HPKE_v1', 'shared_secret', 
                                                              'g'^~x, 'g'^~y>,
                                                             '32'),
                                                      <'HPKE_v1', 'secret', 'blank'>),
                                              <'32', 'HPKE_v1', 'exp', '0x00', 
                                               Extract('blank',
                                                       <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                               Extract('blank',
                                                       <'HPKE_v1', 'info_hash', 
                                                        'message_ohttp_req', '0x00', ~key_id, 
                                                        $kem_id, $kdf_id, $aead_id>)
                                              >,
                                              '32'),
                                       <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32'))
                   ) @ #vk.20 )
              case c_Extract
              solve( !KU( Expand(Expand(Extract(Expand(Extract('blank',
                                                               <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                                       <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 
                                                        'g'^~y>,
                                                       '32'),
                                                <'HPKE_v1', 'secret', 'blank'>),
                                        <'32', 'HPKE_v1', 'exp', '0x00', 
                                         Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                         Extract('blank',
                                                 <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                  '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>)
                                        >,
                                        '32'),
                                 <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')
                     ) @ #vk.25 )
                case c_Expand
                solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                          <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                                  <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y
                                                  >,
                                                  '32'),
                                           <'HPKE_v1', 'secret', 'blank'>),
                                   <'32', 'HPKE_v1', 'exp', '0x00', 
                                    Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                    Extract('blank',
                                            <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                             ~key_id, $kem_id, $kdf_id, $aead_id>)
                                   >,
                                   '32')
                       ) @ #vk.28 )
                  case c_Expand
                  solve( !KU( Extract(Expand(Extract('blank',
                                                     <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                             <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y>,
                                             '32'),
                                      <'HPKE_v1', 'secret', 'blank'>)
                         ) @ #vk.36 )
                    case c_Extract
                    solve( !KU( Expand(Extract('blank',
                                               <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                       <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y>, '32')
                           ) @ #vk.45 )
                      case c_Expand
                      solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>)
                             ) @ #vk.52 )
                        case c_Extract
                        solve( !KU( 'g'^(~x*~y) ) @ #vk.59 )
                          case C_QueryGeneration
                          by solve( !KU( ~y ) @ #vk.60 )
                        next
                          case Generate_DH_key_pair
                          by solve( !KU( ~x ) @ #vk.60 )
                        next
                          case c_exp
                          by solve( !KU( ~x ) @ #vk.62 )
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    next
      case c_seal
      solve( !KU( ~resp ) @ #vk.19 )
        case NonceReuse
        solve( !KU( seal(Expand(Extract(<'g'^~x, ~resp_nonce>,
                                        Expand(Expand(Extract(Expand(Extract('blank',
                                                                             <'HPKE_v1', 'eae_prk', 
                                                                              'g'^(~x*~y)>),
                                                                     <'32', 'HPKE_v1', 
                                                                      'shared_secret', 'g'^~x, 
                                                                      'g'^~y>,
                                                                     '32'),
                                                              <'HPKE_v1', 'secret', 'blank'>),
                                                      <'32', 'HPKE_v1', 'exp', '0x00', 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'psk_id_hash', 'blank'
                                                               >), 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'info_hash', 
                                                                'message_ohttp_req', '0x00', 
                                                                ~key_id, $kem_id, $kdf_id, $aead_id
                                                               >)
                                                      >,
                                                      '32'),
                                               <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                               '32')),
                                'key', '32'),
                         Expand(Extract(<'g'^~x, ~resp_nonce>,
                                        Expand(Expand(Extract(Expand(Extract('blank',
                                                                             <'HPKE_v1', 'eae_prk', 
                                                                              'g'^(~x*~y)>),
                                                                     <'32', 'HPKE_v1', 
                                                                      'shared_secret', 'g'^~x, 
                                                                      'g'^~y>,
                                                                     '32'),
                                                              <'HPKE_v1', 'secret', 'blank'>),
                                                      <'32', 'HPKE_v1', 'exp', '0x00', 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'psk_id_hash', 'blank'
                                                               >), 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'info_hash', 
                                                                'message_ohttp_req', '0x00', 
                                                                ~key_id, $kem_id, $kdf_id, $aead_id
                                                               >)
                                                      >,
                                                      '32'),
                                               <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                               '32')),
                                'nonce', '32'),
                         'blank', ~resp)
               ) @ #vk.20 )
          case T_HandleQuery
          solve( !KU( seal(Expand(Extract(<'g'^~x, ~resp_nonce>,
                                          Expand(Expand(Extract(Expand(Extract('blank',
                                                                               <'HPKE_v1', 
                                                                                'eae_prk', 
                                                                                'g'^(~x*~y)>),
                                                                       <'32', 'HPKE_v1', 
                                                                        'shared_secret', 'g'^~x, 
                                                                        'g'^~y>,
                                                                       '32'),
                                                                <'HPKE_v1', 'secret', 'blank'>),
                                                        <'32', 'HPKE_v1', 'exp', '0x00', 
                                                         Extract('blank',
                                                                 <'HPKE_v1', 'psk_id_hash', 'blank'
                                                                 >), 
                                                         Extract('blank',
                                                                 <'HPKE_v1', 'info_hash', 
                                                                  'message_ohttp_req', '0x00', 
                                                                  ~key_id, $kem_id, $kdf_id, 
                                                                  $aead_id>)
                                                        >,
                                                        '32'),
                                                 <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                                 '32')),
                                  'key', '32'),
                           Expand(Extract(<'g'^~x, ~resp_nonce>,
                                          Expand(Expand(Extract(Expand(Extract('blank',
                                                                               <'HPKE_v1', 
                                                                                'eae_prk', 
                                                                                'g'^(~x*~y)>),
                                                                       <'32', 'HPKE_v1', 
                                                                        'shared_secret', 'g'^~x, 
                                                                        'g'^~y>,
                                                                       '32'),
                                                                <'HPKE_v1', 'secret', 'blank'>),
                                                        <'32', 'HPKE_v1', 'exp', '0x00', 
                                                         Extract('blank',
                                                                 <'HPKE_v1', 'psk_id_hash', 'blank'
                                                                 >), 
                                                         Extract('blank',
                                                                 <'HPKE_v1', 'info_hash', 
                                                                  'message_ohttp_req', '0x00', 
                                                                  ~key_id, $kem_id, $kdf_id, 
                                                                  $aead_id>)
                                                        >,
                                                        '32'),
                                                 <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                                 '32')),
                                  'nonce', '32'),
                           a2.1, p2)
                 ) @ #vk.21 )
            case T_HandleQuery
            by contradiction /* from formulas */
          next
            case c_seal
            solve( !KU( Expand(Extract(<'g'^~x, ~resp_nonce>,
                                       Expand(Expand(Extract(Expand(Extract('blank',
                                                                            <'HPKE_v1', 'eae_prk', 
                                                                             'g'^(~x*~y)>),
                                                                    <'32', 'HPKE_v1', 
                                                                     'shared_secret', 'g'^~x, 'g'^~y
                                                                    >,
                                                                    '32'),
                                                             <'HPKE_v1', 'secret', 'blank'>),
                                                     <'32', 'HPKE_v1', 'exp', '0x00', 
                                                      Extract('blank',
                                                              <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                      Extract('blank',
                                                              <'HPKE_v1', 'info_hash', 
                                                               'message_ohttp_req', '0x00', 
                                                               ~key_id, $kem_id, $kdf_id, $aead_id>)
                                                     >,
                                                     '32'),
                                              <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                               'key', '32')
                   ) @ #vk.22 )
              case c_Expand
              solve( !KU( Expand(Extract(<'g'^~x, ~resp_nonce>,
                                         Expand(Expand(Extract(Expand(Extract('blank',
                                                                              <'HPKE_v1', 
                                                                               'eae_prk', 
                                                                               'g'^(~x*~y)>),
                                                                      <'32', 'HPKE_v1', 
                                                                       'shared_secret', 'g'^~x, 
                                                                       'g'^~y>,
                                                                      '32'),
                                                               <'HPKE_v1', 'secret', 'blank'>),
                                                       <'32', 'HPKE_v1', 'exp', '0x00', 
                                                        Extract('blank',
                                                                <'HPKE_v1', 'psk_id_hash', 'blank'
                                                                >), 
                                                        Extract('blank',
                                                                <'HPKE_v1', 'info_hash', 
                                                                 'message_ohttp_req', '0x00', 
                                                                 ~key_id, $kem_id, $kdf_id, $aead_id
                                                                >)
                                                       >,
                                                       '32'),
                                                <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                                '32')),
                                 'nonce', '32')
                     ) @ #vk.23 )
                case c_Expand
                solve( !KU( Extract(<'g'^~x, ~resp_nonce>,
                                    Expand(Expand(Extract(Expand(Extract('blank',
                                                                         <'HPKE_v1', 'eae_prk', 
                                                                          'g'^(~x*~y)>),
                                                                 <'32', 'HPKE_v1', 'shared_secret', 
                                                                  'g'^~x, 'g'^~y>,
                                                                 '32'),
                                                          <'HPKE_v1', 'secret', 'blank'>),
                                                  <'32', 'HPKE_v1', 'exp', '0x00', 
                                                   Extract('blank',
                                                           <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                   Extract('blank',
                                                           <'HPKE_v1', 'info_hash', 
                                                            'message_ohttp_req', '0x00', ~key_id, 
                                                            $kem_id, $kdf_id, $aead_id>)
                                                  >,
                                                  '32'),
                                           <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32'))
                       ) @ #vk.26 )
                  case c_Extract
                  solve( !KU( Expand(Expand(Extract(Expand(Extract('blank',
                                                                   <'HPKE_v1', 'eae_prk', 
                                                                    'g'^(~x*~y)>),
                                                           <'32', 'HPKE_v1', 'shared_secret', 
                                                            'g'^~x, 'g'^~y>,
                                                           '32'),
                                                    <'HPKE_v1', 'secret', 'blank'>),
                                            <'32', 'HPKE_v1', 'exp', '0x00', 
                                             Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                             Extract('blank',
                                                     <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                      '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>)
                                            >,
                                            '32'),
                                     <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')
                         ) @ #vk.31 )
                    case c_Expand
                    solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                              <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                                      <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 
                                                       'g'^~y>,
                                                      '32'),
                                               <'HPKE_v1', 'secret', 'blank'>),
                                       <'32', 'HPKE_v1', 'exp', '0x00', 
                                        Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                        Extract('blank',
                                                <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                 '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>)
                                       >,
                                       '32')
                           ) @ #vk.34 )
                      case c_Expand
                      solve( !KU( Extract(Expand(Extract('blank',
                                                         <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                                 <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y>,
                                                 '32'),
                                          <'HPKE_v1', 'secret', 'blank'>)
                             ) @ #vk.42 )
                        case c_Extract
                        solve( !KU( Expand(Extract('blank',
                                                   <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                           <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y>, '32')
                               ) @ #vk.51 )
                          case c_Expand
                          solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>)
                                 ) @ #vk.58 )
                            case c_Extract
                            solve( !KU( 'g'^(~x*~y) ) @ #vk.65 )
                              case C_QueryGeneration
                              by solve( !KU( ~y ) @ #vk.66 )
                            next
                              case Generate_DH_key_pair
                              by solve( !KU( ~x ) @ #vk.66 )
                            next
                              case c_exp
                              by solve( !KU( ~x ) @ #vk.68 )
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        next
          case c_seal
          by contradiction /* cyclic */
        qed
      next
        case T_HandleQuery
        solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>)
               ) @ #vk.58 )
          case c_Extract
          solve( !KU( 'g'^(~x*~y) ) @ #vk.64 )
            case C_QueryGeneration
            by solve( !KU( ~y ) @ #vk.65 )
          next
            case Generate_DH_key_pair
            by solve( !KU( ~x ) @ #vk.65 )
          next
            case c_exp
            by solve( !KU( ~x ) @ #vk.67 )
          qed
        qed
      qed
    qed
  next
    case P_HandleQuery
    solve( !KU( senc(<~cid, <~key_id, $kem_id, $kdf_id, $aead_id>, 
                      'g'^~x, 
                      seal(Expand(Extract(Expand(Extract('blank',
                                                         <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                                 <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y>,
                                                 '32'),
                                          <'HPKE_v1', 'secret', 'blank'>),
                                  <'32', 'HPKE_v1', 'key', '0x00', 
                                   Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                   Extract('blank',
                                           <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                            ~key_id, $kem_id, $kdf_id, $aead_id>)
                                  >,
                                  '32'),
                           Expand(Extract(Expand(Extract('blank',
                                                         <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                                 <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y>,
                                                 '32'),
                                          <'HPKE_v1', 'secret', 'blank'>),
                                  <'32', 'HPKE_v1', 'base_nonce', '0x00', 
                                   Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                   Extract('blank',
                                           <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                            ~key_id, $kem_id, $kdf_id, $aead_id>)
                                  >,
                                  '32'),
                           <'message_ohttp_req', '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>,
                           ~req)
                     >,
                     ~k.1)
           ) @ #vk.15 )
      case C_QueryGeneration
      solve( !KU( seal(key, n, a2, ~resp) ) @ #vk.15 )
        case T_HandleQuery
        solve( !KU( seal(Expand(Extract(<'g'^~x, ~resp_nonce>,
                                        Expand(Expand(Extract(Expand(Extract('blank',
                                                                             <'HPKE_v1', 'eae_prk', 
                                                                              'g'^(~x*~y)>),
                                                                     <'32', 'HPKE_v1', 
                                                                      'shared_secret', 'g'^~x, 
                                                                      'g'^~y>,
                                                                     '32'),
                                                              <'HPKE_v1', 'secret', 'blank'>),
                                                      <'32', 'HPKE_v1', 'exp', '0x00', 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'psk_id_hash', 'blank'
                                                               >), 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'info_hash', 
                                                                'message_ohttp_req', '0x00', 
                                                                ~key_id, $kem_id, $kdf_id, $aead_id
                                                               >)
                                                      >,
                                                      '32'),
                                               <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                               '32')),
                                'key', '32'),
                         Expand(Extract(<'g'^~x, ~resp_nonce>,
                                        Expand(Expand(Extract(Expand(Extract('blank',
                                                                             <'HPKE_v1', 'eae_prk', 
                                                                              'g'^(~x*~y)>),
                                                                     <'32', 'HPKE_v1', 
                                                                      'shared_secret', 'g'^~x, 
                                                                      'g'^~y>,
                                                                     '32'),
                                                              <'HPKE_v1', 'secret', 'blank'>),
                                                      <'32', 'HPKE_v1', 'exp', '0x00', 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'psk_id_hash', 'blank'
                                                               >), 
                                                       Extract('blank',
                                                               <'HPKE_v1', 'info_hash', 
                                                                'message_ohttp_req', '0x00', 
                                                                ~key_id, $kem_id, $kdf_id, $aead_id
                                                               >)
                                                      >,
                                                      '32'),
                                               <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                               '32')),
                                'nonce', '32'),
                         a1, a)
               ) @ #vk.15 )
          case T_HandleQuery
          by contradiction /* from formulas */
        next
          case c_seal
          solve( !KU( Expand(Extract(<'g'^~x, ~resp_nonce>,
                                     Expand(Expand(Extract(Expand(Extract('blank',
                                                                          <'HPKE_v1', 'eae_prk', 
                                                                           'g'^(~x*~y)>),
                                                                  <'32', 'HPKE_v1', 
                                                                   'shared_secret', 'g'^~x, 'g'^~y>,
                                                                  '32'),
                                                           <'HPKE_v1', 'secret', 'blank'>),
                                                   <'32', 'HPKE_v1', 'exp', '0x00', 
                                                    Extract('blank',
                                                            <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                    Extract('blank',
                                                            <'HPKE_v1', 'info_hash', 
                                                             'message_ohttp_req', '0x00', ~key_id, 
                                                             $kem_id, $kdf_id, $aead_id>)
                                                   >,
                                                   '32'),
                                            <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                             'key', '32')
                 ) @ #vk.16 )
            case c_Expand
            solve( !KU( Expand(Extract(<'g'^~x, ~resp_nonce>,
                                       Expand(Expand(Extract(Expand(Extract('blank',
                                                                            <'HPKE_v1', 'eae_prk', 
                                                                             'g'^(~x*~y)>),
                                                                    <'32', 'HPKE_v1', 
                                                                     'shared_secret', 'g'^~x, 'g'^~y
                                                                    >,
                                                                    '32'),
                                                             <'HPKE_v1', 'secret', 'blank'>),
                                                     <'32', 'HPKE_v1', 'exp', '0x00', 
                                                      Extract('blank',
                                                              <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                      Extract('blank',
                                                              <'HPKE_v1', 'info_hash', 
                                                               'message_ohttp_req', '0x00', 
                                                               ~key_id, $kem_id, $kdf_id, $aead_id>)
                                                     >,
                                                     '32'),
                                              <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')),
                               'nonce', '32')
                   ) @ #vk.17 )
              case c_Expand
              solve( !KU( Extract(<'g'^~x, ~resp_nonce>,
                                  Expand(Expand(Extract(Expand(Extract('blank',
                                                                       <'HPKE_v1', 'eae_prk', 
                                                                        'g'^(~x*~y)>),
                                                               <'32', 'HPKE_v1', 'shared_secret', 
                                                                'g'^~x, 'g'^~y>,
                                                               '32'),
                                                        <'HPKE_v1', 'secret', 'blank'>),
                                                <'32', 'HPKE_v1', 'exp', '0x00', 
                                                 Extract('blank',
                                                         <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                 Extract('blank',
                                                         <'HPKE_v1', 'info_hash', 
                                                          'message_ohttp_req', '0x00', ~key_id, 
                                                          $kem_id, $kdf_id, $aead_id>)
                                                >,
                                                '32'),
                                         <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32'))
                     ) @ #vk.20 )
                case c_Extract
                solve( !KU( Expand(Expand(Extract(Expand(Extract('blank',
                                                                 <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)
                                                                 >),
                                                         <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 
                                                          'g'^~y>,
                                                         '32'),
                                                  <'HPKE_v1', 'secret', 'blank'>),
                                          <'32', 'HPKE_v1', 'exp', '0x00', 
                                           Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                           Extract('blank',
                                                   <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                    '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>)
                                          >,
                                          '32'),
                                   <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')
                       ) @ #vk.25 )
                  case c_Expand
                  solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                            <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                                    <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 
                                                     'g'^~y>,
                                                    '32'),
                                             <'HPKE_v1', 'secret', 'blank'>),
                                     <'32', 'HPKE_v1', 'exp', '0x00', 
                                      Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                      Extract('blank',
                                              <'HPKE_v1', 'info_hash', 'message_ohttp_req', '0x00', 
                                               ~key_id, $kem_id, $kdf_id, $aead_id>)
                                     >,
                                     '32')
                         ) @ #vk.28 )
                    case c_Expand
                    solve( !KU( Extract(Expand(Extract('blank',
                                                       <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                               <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y>,
                                               '32'),
                                        <'HPKE_v1', 'secret', 'blank'>)
                           ) @ #vk.36 )
                      case c_Extract
                      solve( !KU( Expand(Extract('blank',
                                                 <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                         <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y>, '32')
                             ) @ #vk.45 )
                        case c_Expand
                        solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>)
                               ) @ #vk.52 )
                          case c_Extract
                          solve( !KU( 'g'^(~x*~y) ) @ #vk.59 )
                            case Generate_DH_key_pair
                            by solve( !KU( ~x ) @ #vk.60 )
                          next
                            case P_HandleQuery
                            by solve( !KU( ~y ) @ #vk.60 )
                          next
                            case c_exp
                            by solve( !KU( ~x ) @ #vk.62 )
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      next
        case c_seal
        solve( !KU( ~resp ) @ #vk.19 )
          case NonceReuse
          solve( !KU( seal(Expand(Extract(<'g'^~x, ~resp_nonce>,
                                          Expand(Expand(Extract(Expand(Extract('blank',
                                                                               <'HPKE_v1', 
                                                                                'eae_prk', 
                                                                                'g'^(~x*~y)>),
                                                                       <'32', 'HPKE_v1', 
                                                                        'shared_secret', 'g'^~x, 
                                                                        'g'^~y>,
                                                                       '32'),
                                                                <'HPKE_v1', 'secret', 'blank'>),
                                                        <'32', 'HPKE_v1', 'exp', '0x00', 
                                                         Extract('blank',
                                                                 <'HPKE_v1', 'psk_id_hash', 'blank'
                                                                 >), 
                                                         Extract('blank',
                                                                 <'HPKE_v1', 'info_hash', 
                                                                  'message_ohttp_req', '0x00', 
                                                                  ~key_id, $kem_id, $kdf_id, 
                                                                  $aead_id>)
                                                        >,
                                                        '32'),
                                                 <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                                 '32')),
                                  'key', '32'),
                           Expand(Extract(<'g'^~x, ~resp_nonce>,
                                          Expand(Expand(Extract(Expand(Extract('blank',
                                                                               <'HPKE_v1', 
                                                                                'eae_prk', 
                                                                                'g'^(~x*~y)>),
                                                                       <'32', 'HPKE_v1', 
                                                                        'shared_secret', 'g'^~x, 
                                                                        'g'^~y>,
                                                                       '32'),
                                                                <'HPKE_v1', 'secret', 'blank'>),
                                                        <'32', 'HPKE_v1', 'exp', '0x00', 
                                                         Extract('blank',
                                                                 <'HPKE_v1', 'psk_id_hash', 'blank'
                                                                 >), 
                                                         Extract('blank',
                                                                 <'HPKE_v1', 'info_hash', 
                                                                  'message_ohttp_req', '0x00', 
                                                                  ~key_id, $kem_id, $kdf_id, 
                                                                  $aead_id>)
                                                        >,
                                                        '32'),
                                                 <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                                 '32')),
                                  'nonce', '32'),
                           'blank', ~resp)
                 ) @ #vk.20 )
            case T_HandleQuery
            solve( !KU( seal(Expand(Extract(<'g'^~x, ~resp_nonce>,
                                            Expand(Expand(Extract(Expand(Extract('blank',
                                                                                 <'HPKE_v1', 
                                                                                  'eae_prk', 
                                                                                  'g'^(~x*~y)>),
                                                                         <'32', 'HPKE_v1', 
                                                                          'shared_secret', 'g'^~x, 
                                                                          'g'^~y>,
                                                                         '32'),
                                                                  <'HPKE_v1', 'secret', 'blank'>),
                                                          <'32', 'HPKE_v1', 'exp', '0x00', 
                                                           Extract('blank',
                                                                   <'HPKE_v1', 'psk_id_hash', 
                                                                    'blank'>), 
                                                           Extract('blank',
                                                                   <'HPKE_v1', 'info_hash', 
                                                                    'message_ohttp_req', '0x00', 
                                                                    ~key_id, $kem_id, $kdf_id, 
                                                                    $aead_id>)
                                                          >,
                                                          '32'),
                                                   <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                                   '32')),
                                    'key', '32'),
                             Expand(Extract(<'g'^~x, ~resp_nonce>,
                                            Expand(Expand(Extract(Expand(Extract('blank',
                                                                                 <'HPKE_v1', 
                                                                                  'eae_prk', 
                                                                                  'g'^(~x*~y)>),
                                                                         <'32', 'HPKE_v1', 
                                                                          'shared_secret', 'g'^~x, 
                                                                          'g'^~y>,
                                                                         '32'),
                                                                  <'HPKE_v1', 'secret', 'blank'>),
                                                          <'32', 'HPKE_v1', 'exp', '0x00', 
                                                           Extract('blank',
                                                                   <'HPKE_v1', 'psk_id_hash', 
                                                                    'blank'>), 
                                                           Extract('blank',
                                                                   <'HPKE_v1', 'info_hash', 
                                                                    'message_ohttp_req', '0x00', 
                                                                    ~key_id, $kem_id, $kdf_id, 
                                                                    $aead_id>)
                                                          >,
                                                          '32'),
                                                   <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                                   '32')),
                                    'nonce', '32'),
                             a2.1, p2)
                   ) @ #vk.21 )
              case T_HandleQuery
              by contradiction /* from formulas */
            next
              case c_seal
              solve( !KU( Expand(Extract(<'g'^~x, ~resp_nonce>,
                                         Expand(Expand(Extract(Expand(Extract('blank',
                                                                              <'HPKE_v1', 
                                                                               'eae_prk', 
                                                                               'g'^(~x*~y)>),
                                                                      <'32', 'HPKE_v1', 
                                                                       'shared_secret', 'g'^~x, 
                                                                       'g'^~y>,
                                                                      '32'),
                                                               <'HPKE_v1', 'secret', 'blank'>),
                                                       <'32', 'HPKE_v1', 'exp', '0x00', 
                                                        Extract('blank',
                                                                <'HPKE_v1', 'psk_id_hash', 'blank'
                                                                >), 
                                                        Extract('blank',
                                                                <'HPKE_v1', 'info_hash', 
                                                                 'message_ohttp_req', '0x00', 
                                                                 ~key_id, $kem_id, $kdf_id, $aead_id
                                                                >)
                                                       >,
                                                       '32'),
                                                <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                                '32')),
                                 'key', '32')
                     ) @ #vk.22 )
                case c_Expand
                solve( !KU( Expand(Extract(<'g'^~x, ~resp_nonce>,
                                           Expand(Expand(Extract(Expand(Extract('blank',
                                                                                <'HPKE_v1', 
                                                                                 'eae_prk', 
                                                                                 'g'^(~x*~y)>),
                                                                        <'32', 'HPKE_v1', 
                                                                         'shared_secret', 'g'^~x, 
                                                                         'g'^~y>,
                                                                        '32'),
                                                                 <'HPKE_v1', 'secret', 'blank'>),
                                                         <'32', 'HPKE_v1', 'exp', '0x00', 
                                                          Extract('blank',
                                                                  <'HPKE_v1', 'psk_id_hash', 'blank'
                                                                  >), 
                                                          Extract('blank',
                                                                  <'HPKE_v1', 'info_hash', 
                                                                   'message_ohttp_req', '0x00', 
                                                                   ~key_id, $kem_id, $kdf_id, 
                                                                   $aead_id>)
                                                         >,
                                                         '32'),
                                                  <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>,
                                                  '32')),
                                   'nonce', '32')
                       ) @ #vk.23 )
                  case c_Expand
                  solve( !KU( Extract(<'g'^~x, ~resp_nonce>,
                                      Expand(Expand(Extract(Expand(Extract('blank',
                                                                           <'HPKE_v1', 'eae_prk', 
                                                                            'g'^(~x*~y)>),
                                                                   <'32', 'HPKE_v1', 
                                                                    'shared_secret', 'g'^~x, 'g'^~y
                                                                   >,
                                                                   '32'),
                                                            <'HPKE_v1', 'secret', 'blank'>),
                                                    <'32', 'HPKE_v1', 'exp', '0x00', 
                                                     Extract('blank',
                                                             <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                                     Extract('blank',
                                                             <'HPKE_v1', 'info_hash', 
                                                              'message_ohttp_req', '0x00', ~key_id, 
                                                              $kem_id, $kdf_id, $aead_id>)
                                                    >,
                                                    '32'),
                                             <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32'))
                         ) @ #vk.26 )
                    case c_Extract
                    solve( !KU( Expand(Expand(Extract(Expand(Extract('blank',
                                                                     <'HPKE_v1', 'eae_prk', 
                                                                      'g'^(~x*~y)>),
                                                             <'32', 'HPKE_v1', 'shared_secret', 
                                                              'g'^~x, 'g'^~y>,
                                                             '32'),
                                                      <'HPKE_v1', 'secret', 'blank'>),
                                              <'32', 'HPKE_v1', 'exp', '0x00', 
                                               Extract('blank',
                                                       <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                               Extract('blank',
                                                       <'HPKE_v1', 'info_hash', 
                                                        'message_ohttp_req', '0x00', ~key_id, 
                                                        $kem_id, $kdf_id, $aead_id>)
                                              >,
                                              '32'),
                                       <'32', 'HPKE_v1', 'sec', 'message_ohttp_res'>, '32')
                           ) @ #vk.31 )
                      case c_Expand
                      solve( !KU( Expand(Extract(Expand(Extract('blank',
                                                                <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)
                                                                >),
                                                        <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 
                                                         'g'^~y>,
                                                        '32'),
                                                 <'HPKE_v1', 'secret', 'blank'>),
                                         <'32', 'HPKE_v1', 'exp', '0x00', 
                                          Extract('blank', <'HPKE_v1', 'psk_id_hash', 'blank'>), 
                                          Extract('blank',
                                                  <'HPKE_v1', 'info_hash', 'message_ohttp_req', 
                                                   '0x00', ~key_id, $kem_id, $kdf_id, $aead_id>)
                                         >,
                                         '32')
                             ) @ #vk.34 )
                        case c_Expand
                        solve( !KU( Extract(Expand(Extract('blank',
                                                           <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                                   <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y
                                                   >,
                                                   '32'),
                                            <'HPKE_v1', 'secret', 'blank'>)
                               ) @ #vk.42 )
                          case c_Extract
                          solve( !KU( Expand(Extract('blank',
                                                     <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>),
                                             <'32', 'HPKE_v1', 'shared_secret', 'g'^~x, 'g'^~y>,
                                             '32')
                                 ) @ #vk.51 )
                            case c_Expand
                            solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>)
                                   ) @ #vk.58 )
                              case c_Extract
                              solve( !KU( 'g'^(~x*~y) ) @ #vk.65 )
                                case Generate_DH_key_pair
                                by solve( !KU( ~x ) @ #vk.66 )
                              next
                                case P_HandleQuery
                                by solve( !KU( ~y ) @ #vk.66 )
                              next
                                case c_exp
                                by solve( !KU( ~x ) @ #vk.68 )
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case c_seal
            by contradiction /* cyclic */
          qed
        next
          case T_HandleQuery
          solve( !KU( Extract('blank', <'HPKE_v1', 'eae_prk', 'g'^(~x*~y)>)
                 ) @ #vk.58 )
            case c_Extract
            solve( !KU( 'g'^(~x*~y) ) @ #vk.64 )
              case Generate_DH_key_pair
              by solve( !KU( ~x ) @ #vk.65 )
            next
              case P_HandleQuery
              by solve( !KU( ~y ) @ #vk.65 )
            next
              case c_exp
              by solve( !KU( ~x ) @ #vk.67 )
            qed
          qed
        qed
      qed
    next
      case P_HandleResponse
      by contradiction /* cyclic */
    next
      case c_senc
      by contradiction /* cyclic */
    qed
  next
    case c_seal
    solve( !KU( seal(key, n, a2, ~resp) ) @ #vk.15 )
      case T_HandleQuery
      by contradiction /* from formulas */
    next
      case c_seal
      solve( !KU( ~resp ) @ #vk.25 )
        case NonceReuse
        by contradiction /* from formulas */
      next
        case T_HandleQuery
        by contradiction /* from formulas */
      qed
    qed
  qed
qed

/* All well-formedness checks were successful. */

end